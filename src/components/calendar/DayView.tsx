
import React from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Checkbox } from '@/components/ui/checkbox';
import { Clock, Info, Edit, Star, Trash2 } from 'lucide-react';

interface Activity {
  id: number;
  name: string;
  emoji: string;
  startTime: string;
  endTime: string;
  duration: string;
  color: string;
  importance: number;
  completed: boolean;
  type: string;
  needEmoji?: string;
}

interface DayViewProps {
  currentDate: Date;
}

const DayView: React.FC<DayViewProps> = ({ currentDate }) => {
  const baseActivities: Activity[] = [
    { id: 2, name: '–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ', emoji: '‚òÄÔ∏è', startTime: '08:00', endTime: '08:30', duration: '30 –º–∏–Ω', color: 'bg-yellow-200', importance: 3, completed: true, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: '‚ö°' },
    { id: 3, name: '–ó–∞—Ä—è–¥–∫–∞', emoji: 'üèÉ‚Äç‚ôÇÔ∏è', startTime: '08:30', endTime: '09:30', duration: '1 —á', color: 'bg-green-200', importance: 4, completed: true, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üí™' },
    { id: 4, name: '–î—É—à, –∑–∞–≤—Ç—Ä–∞–∫, –≥–∏–≥–∏–µ–Ω–∞', emoji: 'üöø', startTime: '09:30', endTime: '10:00', duration: '30 –º–∏–Ω', color: 'bg-blue-200', importance: 4, completed: true, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üßò' },
    { id: 5, name: '–£—Ç—Ä–µ–Ω–Ω–∏–π –¥–Ω–µ–≤–Ω–∏–∫', emoji: 'üìù', startTime: '10:00', endTime: '10:30', duration: '30 –º–∏–Ω', color: 'bg-purple-200', importance: 5, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üß†' },
    { id: 6, name: '–î–æ—Ä–æ–≥–∞ –Ω–∞ —Ä–∞–±–æ—Ç—É', emoji: 'üöó', startTime: '10:30', endTime: '11:00', duration: '30 –º–∏–Ω', color: 'bg-gray-200', importance: 2, completed: false, type: '–∑–∞–¥–∞—á–∞' },
    { id: 7, name: '–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º', emoji: 'üíº', startTime: '11:00', endTime: '12:00', duration: '1 —á', color: 'bg-orange-200', importance: 5, completed: false, type: '–∑–∞–¥–∞—á–∞' },
    { id: 8, name: '–ü–µ—Ä–µ—Ä—ã–≤ –Ω–∞ –∫–æ—Ñ–µ', emoji: '‚òï', startTime: '12:00', endTime: '12:30', duration: '30 –º–∏–Ω', color: 'bg-amber-200', importance: 3, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üå±' },
    { id: 9, name: '–†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏', emoji: 'üìã', startTime: '13:00', endTime: '14:00', duration: '1 —á', color: 'bg-red-200', importance: 4, completed: false, type: '–∑–∞–¥–∞—á–∞' },
    { id: 10, name: '–û–±–µ–¥', emoji: 'üçΩÔ∏è', startTime: '14:00', endTime: '14:30', duration: '30 –º–∏–Ω', color: 'bg-green-300', importance: 4, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üçé' },
    { id: 11, name: '–ü—Ä–æ–≥—É–ª–∫–∞', emoji: 'üö∂‚Äç‚ôÇÔ∏è', startTime: '14:30', endTime: '15:00', duration: '30 –º–∏–Ω', color: 'bg-emerald-200', importance: 3, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üå≥' },
    { id: 12, name: '–†–∞–±–æ—Ç–∞ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏', emoji: 'üìã', startTime: '15:00', endTime: '17:00', duration: '2 —á', color: 'bg-red-200', importance: 4, completed: false, type: '–∑–∞–¥–∞—á–∞' },
    { id: 13, name: '–í—Å—Ç—Ä–µ—á–∞ —Å –¥—Ä—É–≥–æ–º', emoji: 'üë•', startTime: '17:00', endTime: '19:00', duration: '2 —á', color: 'bg-pink-200', importance: 4, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: '‚ù§Ô∏è' },
    { id: 14, name: '–£–∂–∏–Ω', emoji: 'üçΩÔ∏è', startTime: '19:00', endTime: '20:00', duration: '1 —á', color: 'bg-green-300', importance: 4, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üçé' },
    { id: 15, name: '–ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∏–ª—å–º–∞', emoji: 'üé¨', startTime: '20:00', endTime: '21:30', duration: '1.5 —á', color: 'bg-violet-200', importance: 2, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üé≠' },
    { id: 16, name: '–î—É—à, –≥–∏–≥–∏–µ–Ω–∞', emoji: 'üöø', startTime: '21:30', endTime: '22:00', duration: '30 –º–∏–Ω', color: 'bg-blue-200', importance: 4, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üßò' },
    { id: 17, name: '–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–Ω–µ–≤–Ω–∏–∫–∞', emoji: 'üìù', startTime: '22:00', endTime: '22:30', duration: '30 –º–∏–Ω', color: 'bg-purple-200', importance: 5, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üß†' },
    { id: 1, name: '–°–æ–Ω', emoji: 'üò¥', startTime: '22:30', endTime: '08:00', duration: '9.5 —á', color: 'bg-indigo-200', importance: 5, completed: false, type: '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ', needEmoji: 'üõå' },
  ];

  // –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π, –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏—Ö –ø–æ–ª–Ω–æ—á—å
  const activities: Activity[] = [...baseActivities];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –∑–∞–ø–∏—Å—å —Å–Ω–∞ –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
  const sleepActivity = baseActivities.find(a => a.id === 1);
  if (sleepActivity) {
    activities.push({
      ...sleepActivity,
      id: 18, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –±–ª–æ–∫–∞ —Å–Ω–∞
      name: '–°–æ–Ω (—É—Ç—Ä–æ)',
      startTime: '00:00',
      endTime: '08:00',
      duration: '8 —á'
    });
  }

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞–ª–∞
  activities.sort((a, b) => {
    const timeA = a.startTime.split(':').map(Number);
    const timeB = b.startTime.split(':').map(Number);
    return (timeA[0] * 60 + timeA[1]) - (timeB[0] * 60 + timeB[1]);
  });

  const currentTimeString = new Date().toLocaleTimeString('ru-RU', { 
    hour: '2-digit', 
    minute: '2-digit' 
  });

  return (
    <Card className="h-[700px] bg-white/70 backdrop-blur-lg border-0 shadow-xl">
      <CardContent className="p-6">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold flex items-center space-x-2">
            <Clock className="w-5 h-5 text-emerald-600" />
            <span>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–Ω—è</span>
          </h2>
          <Badge variant="outline" className="bg-red-500 text-white">
            –°–µ–π—á–∞—Å: {currentTimeString}
          </Badge>
        </div>

        <div className="space-y-3 max-h-[600px] overflow-y-auto">
          {activities.map((activity) => (
            <div 
              key={activity.id}
              className={`${activity.color} rounded-lg p-4 border border-gray-200`}
            >
              <div className="flex items-start justify-between">
                <div className="flex items-start space-x-3 flex-1">
                  <Checkbox 
                    checked={activity.completed}
                    className="w-6 h-6 rounded-sm mt-1"
                  />
                  <div className="flex flex-col space-y-2">
                    <span className="font-medium text-lg">{activity.name}</span>
                    
                    <div className="flex items-center space-x-4 text-sm text-gray-600">
                      <span className="font-medium">[{activity.startTime}-{activity.endTime}]</span>
                      <span>[{activity.duration}]</span>
                      <div className="flex items-center">
                        {Array.from({ length: activity.importance }, (_, i) => (
                          <Star key={i} className="w-3 h-3 fill-yellow-400 text-yellow-400" />
                        ))}
                      </div>
                    </div>

                    <div className="flex items-center space-x-2">
                      <span className="text-2xl">{activity.emoji}</span>
                      {activity.type === '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ' && activity.needEmoji && (
                        <span className="text-lg">{activity.needEmoji}</span>
                      )}
                      <Badge variant="secondary" className="text-xs">
                        {activity.type}
                      </Badge>
                    </div>
                  </div>
                </div>
                
                <div className="flex items-center space-x-1">
                  <Button size="icon" variant="ghost" className="h-8 w-8">
                    <Info className="w-4 h-4" />
                  </Button>
                  <Button size="icon" variant="ghost" className="h-8 w-8">
                    <Edit className="w-4 h-4" />
                  </Button>
                  <Button size="icon" variant="ghost" className="h-8 w-8">
                    <Star className="w-4 h-4" />
                  </Button>
                  <Button size="icon" variant="ghost" className="h-8 w-8">
                    <Trash2 className="w-4 h-4 text-red-500" />
                  </Button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  );
};

export default DayView;
