
import React, { useState, useEffect } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { ScrollArea } from '@/components/ui/scroll-area';
import { ChevronRight, BookOpen, Stethoscope, Wrench } from 'lucide-react';
import ArticleBasicConcepts from './ArticleBasicConcepts';
import ArticlePracticalAspects from './ArticlePracticalAspects';
import ArticleResourcesAndTools from './ArticleResourcesAndTools';

interface ArticleTabContentProps {
  content: string;
}

const ArticleTabContent: React.FC<ArticleTabContentProps> = ({ content }) => {
  const [activeSection, setActiveSection] = useState('concepts');

  const sections = [
    {
      id: 'concepts',
      title: '–û—Å–Ω–æ–≤—ã –¥–µ–ø—Ä–µ—Å—Å–∏–∏',
      icon: BookOpen,
      description: '–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–µ–ø—Ä–µ—Å—Å–∏—è, –∫–∞–∫ –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è, –ø—Ä–∏—á–∏–Ω—ã –∏ –º–µ—Ö–∞–Ω–∏–∑–º—ã',
      subsections: [
        '–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–µ–ø—Ä–µ—Å—Å–∏—è?',
        '–ù–∞ —á—Ç–æ –≤–ª–∏—è–µ—Ç –¥–µ–ø—Ä–µ—Å—Å–∏—è?',
        '–ö–∞–∫ –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –¥–µ–ø—Ä–µ—Å—Å–∏—è',
        '–ö–∞–∫–∞—è –±—ã–≤–∞–µ—Ç –¥–µ–ø—Ä–µ—Å—Å–∏—è',
        '–ü—Ä–∏—á–∏–Ω—ã –∏ –º–µ—Ö–∞–Ω–∏–∑–º—ã —Ä–∞–∑–≤–∏—Ç–∏—è',
        '–ö–∞–∫ –∏—Å—Å–ª–µ–¥–æ–≤–∞–ª–∏ –∏ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏ –¥–µ–ø—Ä–µ—Å—Å–∏—é'
      ]
    },
    {
      id: 'practical',
      title: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ª–µ—á–µ–Ω–∏–µ',
      icon: Stethoscope,
      description: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –º–µ—Ç–æ–¥—ã –ª–µ—á–µ–Ω–∏—è, –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      subsections: [
        '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –∫–∞–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –¥–µ–ø—Ä–µ—Å—Å–∏—é',
        '–ö–∞–∫ –ª–µ—á–∞—Ç –¥–µ–ø—Ä–µ—Å—Å–∏—é',
        '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∏ —Å–∞–º–æ–ø–æ–º–æ—â—å',
        '–ö–∞–∫ –ø–æ–º–æ—á—å –±–ª–∏–∑–∫–æ–º—É —Å –¥–µ–ø—Ä–µ—Å—Å–∏–µ–π',
        '–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏'
      ]
    },
    {
      id: 'resources',
      title: '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Ä–µ—Å—É—Ä—Å—ã',
      icon: Wrench,
      description: '–¢–µ—Å—Ç—ã, –¥–Ω–µ–≤–Ω–∏–∫–∏ –∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–µ–ø—Ä–µ—Å—Å–∏–µ–π',
      subsections: [
        '–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã',
        '–î–Ω–µ–≤–Ω–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–µ–ø—Ä–µ—Å—Å–∏–µ–π',
        '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏'
      ]
    }
  ];

  // Scroll spy effect
  useEffect(() => {
    const handleScroll = () => {
      const conceptsEl = document.getElementById('section-concepts');
      const practicalEl = document.getElementById('section-practical');
      const resourcesEl = document.getElementById('section-resources');
      
      const scrollPosition = window.scrollY + 150;

      if (resourcesEl && resourcesEl.offsetTop <= scrollPosition) {
        setActiveSection('resources');
      } else if (practicalEl && practicalEl.offsetTop <= scrollPosition) {
        setActiveSection('practical');
      } else if (conceptsEl && conceptsEl.offsetTop <= scrollPosition) {
        setActiveSection('concepts');
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(`section-${sectionId}`);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
  };

  return (
    <div className="space-y-8">
      {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ */}
      <Card className="mb-8">
        <CardContent className="p-8">
          <div className="space-y-12">
            <div id="section-concepts">
              <ArticleBasicConcepts />
            </div>
            
            <div id="section-practical">
              <ArticlePracticalAspects />
            </div>
            
            <div id="section-resources">
              <ArticleResourcesAndTools />
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –ú–∏–Ω–∏-–æ–∫–Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {sections.map((section) => {
          const IconComponent = section.icon;
          const isActive = activeSection === section.id;
          
          return (
            <Card 
              key={section.id}
              className={`cursor-pointer transition-all duration-200 hover:shadow-lg ${
                isActive 
                  ? 'ring-2 ring-emerald-500 bg-emerald-50 border-emerald-200' 
                  : 'hover:border-emerald-300'
              }`}
              onClick={() => scrollToSection(section.id)}
            >
              <CardContent className="p-6">
                <div className="flex items-start space-x-4">
                  <div className={`p-3 rounded-lg ${
                    isActive 
                      ? 'bg-emerald-500 text-white' 
                      : 'bg-gray-100 text-gray-600'
                  }`}>
                    <IconComponent className="w-6 h-6" />
                  </div>
                  
                  <div className="flex-1">
                    <h3 className={`text-lg font-semibold mb-2 ${
                      isActive ? 'text-emerald-700' : 'text-gray-900'
                    }`}>
                      {section.title}
                    </h3>
                    <p className="text-sm text-gray-600 mb-4">
                      {section.description}
                    </p>
                    
                    <div className="space-y-2">
                      {section.subsections.map((subsection, index) => (
                        <div 
                          key={index}
                          className="flex items-center text-xs text-gray-500 hover:text-emerald-600 transition-colors"
                        >
                          <ChevronRight className="w-3 h-3 mr-1 flex-shrink-0" />
                          <span className="line-clamp-1">{subsection}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
                
                {isActive && (
                  <div className="mt-4 pt-4 border-t border-emerald-200">
                    <div className="flex items-center text-emerald-600 text-sm font-medium">
                      <span>‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–¥–µ–ª</span>
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          );
        })}
      </div>
      
      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <Card className="bg-blue-50 border-blue-200">
        <CardContent className="p-4">
          <div className="flex items-center space-x-3">
            <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center">
              <span className="text-white text-sm font-bold">üí°</span>
            </div>
            <div>
              <p className="text-blue-800 text-sm">
                <strong>–°–æ–≤–µ—Ç:</strong> –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±–æ–µ –∏–∑ –æ–∫–æ—à–µ–∫ –≤—ã—à–µ, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ –Ω—É–∂–Ω–æ–º—É —Ä–∞–∑–¥–µ–ª—É —Å—Ç–∞—Ç—å–∏.
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default ArticleTabContent;
