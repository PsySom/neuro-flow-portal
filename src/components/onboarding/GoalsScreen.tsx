
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Card, CardContent } from '@/components/ui/card';

interface GoalsScreenProps {
  onNext: (data: any) => void;
  onBack: () => void;
}

const GoalsScreen: React.FC<GoalsScreenProps> = ({ onNext, onBack }) => {
  const [selectedGoals, setSelectedGoals] = useState<string[]>([]);

  const goals = [
    { id: 'reduce-anxiety', title: '–°–Ω–∏–∑–∏—Ç—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å', emoji: 'üåø' },
    { id: 'improve-mood', title: '–£–ª—É—á—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', emoji: '‚òÄÔ∏è' },
    { id: 'boost-self-esteem', title: '–ü–æ–≤—ã—Å–∏—Ç—å —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É', emoji: 'üíé' },
    { id: 'manage-stress', title: '–°–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º', emoji: 'üßò' },
    { id: 'better-sleep', title: '–£–ª—É—á—à–∏—Ç—å —Å–æ–Ω', emoji: 'üåô' },
    { id: 'productivity', title: '–ü–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', emoji: 'üéØ' },
    { id: 'mindfulness', title: '–†–∞–∑–≤–∏—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å', emoji: 'üß†' },
    { id: 'life-balance', title: '–ù–∞–π—Ç–∏ –±–∞–ª–∞–Ω—Å –≤ –∂–∏–∑–Ω–∏', emoji: '‚öñÔ∏è' },
    { id: 'relationships', title: '–£–ª—É—á—à–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è', emoji: 'üíù' },
    { id: 'self-care', title: '–ó–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ', emoji: 'üå∏' },
    { id: 'habits', title: '–†–∞–∑–≤–∏—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏', emoji: 'üìà' },
    { id: 'thoughts', title: '–†–∞–±–æ—Ç–∞—Ç—å —Å –º—ã—Å–ª—è–º–∏', emoji: 'üí≠' }
  ];

  const toggleGoal = (goalId: string) => {
    setSelectedGoals(prev => {
      if (prev.includes(goalId)) {
        return prev.filter(id => id !== goalId);
      } else if (prev.length < 5) {
        return [...prev, goalId];
      }
      return prev;
    });
  };

  const handleSubmit = () => {
    onNext({ goals: selectedGoals });
  };

  return (
    <div className="p-8">
      <div className="mb-6">
        <Progress value={87.5} className="mb-4" />
        <p className="text-sm text-gray-500">7 –∏–∑ 8 —à–∞–≥–æ–≤</p>
      </div>
      
      <h2 className="text-2xl font-bold text-gray-900 mb-2">
        –ß–µ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∏—á—å —Å PsyBalans?
      </h2>
      <p className="text-gray-600 mb-6">–í—ã–±–µ—Ä–∏—Ç–µ 3-5 –≥–ª–∞–≤–Ω—ã—Ö —Ü–µ–ª–µ–π</p>
      
      <div className="grid grid-cols-2 gap-3 mb-6">
        {goals.map((goal) => (
          <Card
            key={goal.id}
            className={`cursor-pointer transition-all hover:bg-gray-50 ${
              selectedGoals.includes(goal.id) ? 'ring-2 ring-emerald-500 bg-emerald-50' : ''
            }`}
            onClick={() => toggleGoal(goal.id)}
          >
            <CardContent className="p-4">
              <div className="flex items-center space-x-3">
                <span className="text-lg">{goal.emoji}</span>
                <span className="text-sm font-medium text-gray-900">{goal.title}</span>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <p className="text-sm text-gray-500 mb-6">
        –í—ã–±—Ä–∞–Ω–æ: {selectedGoals.length} –∏–∑ 5
      </p>

      <div className="flex space-x-4">
        <Button variant="outline" onClick={onBack} className="flex-1">
          –ù–∞–∑–∞–¥
        </Button>
        <Button 
          onClick={handleSubmit}
          className="flex-1 bg-gradient-to-r from-emerald-500 to-teal-500"
          disabled={selectedGoals.length < 3}
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        </Button>
      </div>
    </div>
  );
};

export default GoalsScreen;
