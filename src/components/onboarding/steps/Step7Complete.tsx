import React, { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { Label } from '@/components/ui/label';
import { CheckCircle, Sparkles, Book, Activity, Calendar, Bot, Settings } from 'lucide-react';
import { OnboardingData } from '../hooks/useOnboardingState';
import Confetti from 'react-confetti';

interface Step7CompleteProps {
  data: OnboardingData;
  updateData: (updates: Partial<OnboardingData>) => void;
  onNext: () => void;
  onComplete: () => void;
}

const primaryGoals = [
  { id: 'mood', label: '–£–ª—É—á—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', icon: 'üòä', description: '–°—Ç–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º' },
  { id: 'sleep', label: '–ù–∞–ª–∞–¥–∏—Ç—å —Å–æ–Ω', icon: 'üò¥', description: '–í—ã—Å—ã–ø–∞—Ç—å—Å—è –∏ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –±–æ–¥—Ä–æ—Å—Ç—å' },
  { id: 'stress', label: '–°–Ω–∏–∑–∏—Ç—å —Å—Ç—Ä–µ—Å—Å', icon: 'üòå', description: '–ú–µ–Ω—å—à–µ —Ç—Ä–µ–≤–æ–∂–∏—Ç—å—Å—è' },
  { id: 'procrastination', label: '–ü–æ–±–µ–¥–∏—Ç—å –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—é', icon: '‚úÖ', description: '–î–µ–ª–∞—Ç—å –¥–µ–ª–∞ –≤–æ–≤—Ä–µ–º—è' },
  { id: 'mindfulness', label: '–†–∞–∑–≤–∏—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å', icon: 'üßò', description: '–ë—ã—Ç—å –≤ –º–æ–º–µ–Ω—Ç–µ' },
  { id: 'energy', label: '–ü–æ–≤—ã—Å–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é', icon: '‚ö°', description: '–ß—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –±–æ–¥—Ä–µ–µ' },
];

interface Recommendation {
  icon: React.ReactNode;
  title: string;
  description: string;
}

const Step7Complete: React.FC<Step7CompleteProps> = ({ data, updateData, onComplete }) => {
  const [showConfetti, setShowConfetti] = useState(true);

  useEffect(() => {
    // Hide confetti after 5 seconds
    const timer = setTimeout(() => setShowConfetti(false), 5000);
    return () => clearTimeout(timer);
  }, []);

  // Generate personalized diary recommendations
  const getDiaryRecommendations = (): Recommendation[] => {
    const diaries: Recommendation[] = [];
    
    if (data.primaryGoal === 'mood' || data.challenges.includes('mood-swings')) {
      diaries.push({
        icon: <Book className="w-5 h-5 text-blue-500" />,
        title: '–î–Ω–µ–≤–Ω–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è',
        description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã'
      });
    }
    
    if (data.primaryGoal === 'sleep' || data.challenges.includes('sleep-issues') || data.sleepQuality < 5) {
      diaries.push({
        icon: <Book className="w-5 h-5 text-purple-500" />,
        title: '–î–Ω–µ–≤–Ω–∏–∫ —Å–Ω–∞',
        description: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ –∏ —É–ª—É—á—à–∞–π—Ç–µ —Ä–µ–∂–∏–º'
      });
    }
    
    if (data.primaryGoal === 'procrastination' || data.challenges.includes('procrastination')) {
      diaries.push({
        icon: <Book className="w-5 h-5 text-orange-500" />,
        title: '–î–Ω–µ–≤–Ω–∏–∫ –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–∏',
        description: '–ü–æ–±–µ–∂–¥–∞–π—Ç–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –¥–µ–ª –Ω–∞ –ø–æ—Ç–æ–º'
      });
    }

    // Default diary if none selected
    if (diaries.length === 0) {
      diaries.push({
        icon: <Book className="w-5 h-5 text-green-500" />,
        title: '–î–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏',
        description: '–ù–∞—á–Ω–∏—Ç–µ —Å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫'
      });
    }
    
    return diaries.slice(0, 3);
  };

  // Generate personalized practice recommendations
  const getPracticeRecommendations = (): Recommendation[] => {
    const practices: Recommendation[] = [];
    
    if (data.challenges.includes('anxiety') || data.challenges.includes('stress')) {
      practices.push({
        icon: <Activity className="w-5 h-5 text-blue-500" />,
        title: '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏',
        description: '5 –º–∏–Ω—É—Ç –¥–ª—è —Å–Ω—è—Ç–∏—è —Ç—Ä–µ–≤–æ–≥–∏'
      });
    }
    
    if (data.chronotype === 'morning') {
      practices.push({
        icon: <Activity className="w-5 h-5 text-yellow-500" />,
        title: '–£—Ç—Ä–µ–Ω–Ω—è—è –º–µ–¥–∏—Ç–∞—Ü–∏—è',
        description: '–ù–∞—á–Ω–∏—Ç–µ –¥–µ–Ω—å —Å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏'
      });
    }
    
    if (data.chronotype === 'evening') {
      practices.push({
        icon: <Activity className="w-5 h-5 text-purple-500" />,
        title: '–í–µ—á–µ—Ä–Ω—è—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è',
        description: '–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Å–Ω—É'
      });
    }
    
    if (data.primaryGoal === 'procrastination') {
      practices.push({
        icon: <Activity className="w-5 h-5 text-orange-500" />,
        title: '–¢–µ—Ö–Ω–∏–∫–∏ –æ—Ç –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–∏',
        description: 'Pomodoro –∏ –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã'
      });
    }
    
    if (data.primaryGoal === 'mindfulness') {
      practices.push({
        icon: <Activity className="w-5 h-5 text-green-500" />,
        title: '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏',
        description: '–ë—É–¥—å—Ç–µ –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å'
      });
    }

    // Add body scan if low energy
    if (data.energy === 'very-low' || data.energy === 'low') {
      practices.push({
        icon: <Activity className="w-5 h-5 text-pink-500" />,
        title: '–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–∞',
        description: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —ç–Ω–µ—Ä–≥–∏—é'
      });
    }
    
    return practices.slice(0, 5);
  };

  // Generate personalized schedule
  const getScheduleRecommendations = (): Recommendation[] => {
    const schedule: Recommendation[] = [];
    
    // Morning scenario
    if (data.wakeTime) {
      const wakeHour = parseInt(data.wakeTime.split(':')[0]);
      const morningTime = `${wakeHour}:${data.wakeTime.split(':')[1]}`;
      schedule.push({
        icon: <Calendar className="w-5 h-5 text-yellow-500" />,
        title: `–£—Ç—Ä–µ–Ω–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π –≤ ${morningTime}`,
        description: '–ü—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –±–æ–¥—Ä–æ–≥–æ –Ω–∞—á–∞–ª–∞ –¥–Ω—è'
      });
    }
    
    // Midday check
    schedule.push({
      icon: <Calendar className="w-5 h-5 text-blue-500" />,
      title: '–î–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ 14:00',
      description: '–ë—ã—Å—Ç—Ä–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è'
    });
    
    // Evening scenario
    if (data.bedTime) {
      const bedHour = parseInt(data.bedTime.split(':')[0]);
      const eveningTime = bedHour >= 2 ? `${bedHour - 1}:00` : '21:00';
      schedule.push({
        icon: <Calendar className="w-5 h-5 text-purple-500" />,
        title: `–í–µ—á–µ—Ä–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π –≤ ${eveningTime}`,
        description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–º—É —Å–Ω—É'
      });
    }
    
    return schedule;
  };

  const diaryRecommendations = getDiaryRecommendations();
  const practiceRecommendations = getPracticeRecommendations();
  const scheduleRecommendations = getScheduleRecommendations();

  return (
    <div className="space-y-6">
      {showConfetti && (
        <Confetti
          width={window.innerWidth}
          height={window.innerHeight}
          recycle={false}
          numberOfPieces={500}
          gravity={0.3}
        />
      )}

      <div className="space-y-3 text-center">
        <div className="flex justify-center">
          <div className="w-20 h-20 rounded-full bg-primary/10 flex items-center justify-center">
            <Sparkles className="w-10 h-10 text-primary" />
          </div>
        </div>
        
        <h1 className="text-3xl font-bold">
          –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥!
        </h1>
        <p className="text-lg text-muted-foreground">
          –ß—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –≤–∞—Å –≤ PsyBalance?
        </p>
      </div>

      {/* Primary Goal Selection */}
      <Card>
        <CardContent className="pt-6 space-y-4">
          <Label className="text-base font-semibold">
            –í—ã–±–µ—Ä–∏—Ç–µ –≥–ª–∞–≤–Ω—É—é —Ü–µ–ª—å:
          </Label>
          <div className="space-y-3">
            {primaryGoals.map((goal) => (
              <div
                key={goal.id}
                className={`
                  flex items-start space-x-3 p-4 rounded-lg border-2 transition-all cursor-pointer
                  ${data.primaryGoal === goal.id 
                    ? 'border-primary bg-primary/5' 
                    : 'border-border hover:border-primary/50 hover:bg-muted/30'
                  }
                `}
                onClick={() => updateData({ primaryGoal: goal.id })}
              >
                <span className="text-2xl">{goal.icon}</span>
                <div className="flex-1">
                  <p className="font-medium">{goal.label}</p>
                  <p className="text-sm text-muted-foreground">{goal.description}</p>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {data.primaryGoal && (
        <>
          <div className="space-y-3 text-center">
            <div className="flex justify-center">
              <div className="w-16 h-16 rounded-full bg-primary/10 flex items-center justify-center">
                <CheckCircle className="w-8 h-8 text-primary" />
              </div>
            </div>
            <h2 className="text-2xl font-bold">
              ‚ú® –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –≥–æ—Ç–æ–≤!
            </h2>
            <p className="text-lg text-muted-foreground">
              –û—Ç–ª–∏—á–Ω–æ, {data.name}! –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –º—ã –ø–æ–¥–æ–±—Ä–∞–ª–∏:
            </p>
          </div>

          <div className="space-y-6">
            {/* Recommended Diaries */}
        <Card>
          <CardContent className="pt-6">
            <div className="space-y-4">
              <h3 className="text-lg font-semibold flex items-center gap-2">
                <Book className="w-5 h-5 text-primary" />
                üìä –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –¥–Ω–µ–≤–Ω–∏–∫–∏:
              </h3>
              <div className="space-y-3">
                {diaryRecommendations.map((diary, index) => (
                  <div
                    key={index}
                    className="flex items-start gap-3 p-3 bg-muted/50 rounded-lg"
                  >
                    {diary.icon}
                    <div className="flex-1">
                      <p className="font-medium">{diary.title}</p>
                      <p className="text-sm text-muted-foreground">
                        {diary.description}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Recommended Practices */}
        <Card>
          <CardContent className="pt-6">
            <div className="space-y-4">
              <h3 className="text-lg font-semibold flex items-center gap-2">
                <Activity className="w-5 h-5 text-primary" />
                üßò –ü—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª–∞:
              </h3>
              <div className="space-y-3">
                {practiceRecommendations.map((practice, index) => (
                  <div
                    key={index}
                    className="flex items-start gap-3 p-3 bg-muted/50 rounded-lg"
                  >
                    {practice.icon}
                    <div className="flex-1">
                      <p className="font-medium">{practice.title}</p>
                      <p className="text-sm text-muted-foreground">
                        {practice.description}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Personalized Schedule */}
        <Card>
          <CardContent className="pt-6">
            <div className="space-y-4">
              <h3 className="text-lg font-semibold flex items-center gap-2">
                <Calendar className="w-5 h-5 text-primary" />
                üìÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
              </h3>
              <div className="space-y-3">
                {scheduleRecommendations.map((item, index) => (
                  <div
                    key={index}
                    className="flex items-start gap-3 p-3 bg-muted/50 rounded-lg"
                  >
                    {item.icon}
                    <div className="flex-1">
                      <p className="font-medium">{item.title}</p>
                      <p className="text-sm text-muted-foreground">
                        {item.description}
                      </p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </CardContent>
        </Card>

        {/* AI Assistant */}
        <Card className="border-primary/20 bg-primary/5">
          <CardContent className="pt-6">
            <div className="flex items-start gap-3">
              <Bot className="w-6 h-6 text-primary flex-shrink-0 mt-1" />
              <div>
                <h3 className="text-lg font-semibold mb-2">
                  üí¨ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–¥ –≤–∞—à —Å—Ç–∏–ª—å
                </h3>
                <p className="text-sm text-muted-foreground">
                  –ú—ã —É—á–ª–∏ –≤–∞—à —Ä–∏—Ç–º –∂–∏–∑–Ω–∏, —Ö—Ä–æ–Ω–æ—Ç–∏–ø –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.
                  –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –±—É–¥–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
          </div>

          {/* Call to Action */}
          <Button
        size="lg"
        onClick={onComplete}
        className="w-full"
      >
            <Sparkles className="w-5 h-5 mr-2" />
            –ù–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
          </Button>

          {/* Additional Info */}
          <Card className="bg-primary/5 border-primary/20">
            <CardContent className="pt-6">
              <div className="flex items-start gap-3">
                <Settings className="w-5 h-5 text-primary flex-shrink-0 mt-0.5" />
                <div className="text-sm text-foreground/80">
                  <p className="font-medium mb-2">üí° –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ:</p>
                  <ul className="space-y-1 ml-4">
                    <li>‚Ä¢ –î–µ—Ç–∞–ª–∏ —Å–Ω–∞ –∏ —Ä–µ–∂–∏–º</li>
                    <li>‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å</li>
                    <li>‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É</li>
                    <li>‚Ä¢ –°—Ç–∏–ª—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</li>
                  </ul>
                </div>
              </div>
            </CardContent>
          </Card>
        </>
      )}
    </div>
  );
};

export default Step7Complete;
