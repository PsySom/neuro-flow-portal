import React from 'react';
import { Label } from '@/components/ui/label';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { OnboardingData } from '../hooks/useOnboardingState';

interface Step6RhythmProps {
  data: OnboardingData;
  updateData: (updates: Partial<OnboardingData>) => void;
  onNext: () => void;
}

const chronotypes = [
  { id: 'morning', label: 'üåÖ –ñ–∞–≤–æ—Ä–æ–Ω–æ–∫', description: '–ê–∫—Ç–∏–≤–µ–Ω —É—Ç—Ä–æ–º, —Ä–∞–Ω–æ –ª–æ–∂—É—Å—å' },
  { id: 'day', label: '‚òÄÔ∏è –î–Ω–µ–≤–Ω–æ–π', description: '–ü–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–Ω–µ–º' },
  { id: 'evening', label: 'üåô –°–æ–≤–∞', description: '–ê–∫—Ç–∏–≤–µ–Ω –≤–µ—á–µ—Ä–æ–º, –ø–æ–∑–¥–Ω–æ –ª–æ–∂—É—Å—å' },
  { id: 'varies', label: 'üîÑ –ú–µ–Ω—è–µ—Ç—Å—è', description: '–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤' }
];

const commitments = [
  { id: '5-10', label: '5-10 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å' },
  { id: '15-20', label: '15-20 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å' },
  { id: '30-45', label: '30-45 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å' },
  { id: 'flexible', label: '–ü–æ –∂–µ–ª–∞–Ω–∏—é, –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤' }
];

const reminderOptions = [
  { id: 'morning', label: '–£—Ç—Ä–æ–º' },
  { id: 'midday', label: '–î–Ω–µ–º' },
  { id: 'evening', label: '–í–µ—á–µ—Ä–æ–º' },
  { id: 'none', label: '–ù–µ –Ω—É–∂–Ω—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è' }
];

const Step6Rhythm: React.FC<Step6RhythmProps> = ({ data, updateData }) => {
  return (
    <div className="space-y-6">
      <div className="space-y-2 text-center">
        <h2 className="text-2xl font-bold">–í–∞—à —Ä–∏—Ç–º</h2>
        <p className="text-muted-foreground">
          –ö–æ–≥–¥–∞ –≤–∞–º —É–¥–æ–±–Ω–µ–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?
        </p>
      </div>

      <div className="space-y-6">
        {/* Chronotype */}
        <div className="space-y-3">
          <Label className="text-base font-semibold">–í–∞—à —Ö—Ä–æ–Ω–æ—Ç–∏–ø</Label>
          <RadioGroup
            value={data.chronotype}
            onValueChange={(value) => updateData({ chronotype: value })}
          >
            {chronotypes.map((type) => (
              <div key={type.id} className="flex items-center space-x-2">
                <RadioGroupItem value={type.id} id={type.id} />
                <Label htmlFor={type.id} className="cursor-pointer font-normal">
                  <div className="flex flex-col">
                    <span>{type.label}</span>
                    <span className="text-xs text-muted-foreground">
                      {type.description}
                    </span>
                  </div>
                </Label>
              </div>
            ))}
          </RadioGroup>
        </div>

        {/* Time Commitment */}
        <div className="space-y-3">
          <Label className="text-base font-semibold">
            –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≥–æ—Ç–æ–≤—ã —É–¥–µ–ª—è—Ç—å?
          </Label>
          <RadioGroup
            value={data.timeCommitment}
            onValueChange={(value) => updateData({ timeCommitment: value })}
          >
            {commitments.map((commitment) => (
              <div key={commitment.id} className="flex items-center space-x-2">
                <RadioGroupItem value={commitment.id} id={commitment.id} />
                <Label
                  htmlFor={commitment.id}
                  className="cursor-pointer font-normal"
                >
                  {commitment.label}
                </Label>
              </div>
            ))}
          </RadioGroup>
        </div>

        {/* Reminders */}
        <div className="space-y-3">
          <Label className="text-base font-semibold">
            –ö–æ–≥–¥–∞ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –ø—Ä–∞–∫—Ç–∏–∫–∞—Ö?
          </Label>
          <RadioGroup
            value={data.reminders}
            onValueChange={(value) => updateData({ reminders: value })}
          >
            {reminderOptions.map((option) => (
              <div key={option.id} className="flex items-center space-x-2">
                <RadioGroupItem value={option.id} id={option.id} />
                <Label
                  htmlFor={option.id}
                  className="cursor-pointer font-normal"
                >
                  {option.label}
                </Label>
              </div>
            ))}
          </RadioGroup>
        </div>
      </div>
    </div>
  );
};

export default Step6Rhythm;
