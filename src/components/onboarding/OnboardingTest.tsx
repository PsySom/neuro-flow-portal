import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { useOnboardingOptions } from '@/hooks/useOnboardingOptions';
import { onboardingService } from '@/services/onboarding.service';
import { useToast } from '@/hooks/use-toast';

const OnboardingTest: React.FC = () => {
  const [isStarting, setIsStarting] = useState(false);
  const [isTestingStage, setIsTestingStage] = useState(false);
  const { options, isLoading: optionsLoading, error } = useOnboardingOptions();
  const { toast } = useToast();

  const handleStartOnboarding = async () => {
    setIsStarting(true);
    try {
      console.log('üöÄ Testing onboarding start...');
      await onboardingService.startOnboarding();
      toast({
        title: "–£—Å–ø–µ—Ö!",
        description: "–û–Ω–±–æ—Ä–¥–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω",
      });
    } catch (error: any) {
      console.error('‚ùå Error starting onboarding:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error.response?.data?.detail || error.message,
        variant: "destructive",
      });
    } finally {
      setIsStarting(false);
    }
  };

  const handleTestStage = async () => {
    setIsTestingStage(true);
    try {
      console.log('üß™ Testing stage submission...');
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —ç—Ç–∞–ø–∞ introduction
      const testData = {
        name: "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        age: 25,
        gender: "male" as const,
        timezone: "Europe/Moscow"
      };
      
      await onboardingService.saveIntroduction(testData);
      toast({
        title: "–£—Å–ø–µ—Ö!",
        description: "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —ç—Ç–∞–ø–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã",
      });
    } catch (error: any) {
      console.error('‚ùå Error testing stage:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: error.response?.data?.detail || error.message,
        variant: "destructive",
      });
    } finally {
      setIsTestingStage(false);
    }
  };

  return (
    <div className="max-w-2xl mx-auto p-6 space-y-4">
      <Card>
        <CardHeader>
          <CardTitle>üß™ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div>
            <h3 className="font-semibold mb-2">1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞</h3>
            <Button 
              onClick={handleStartOnboarding} 
              disabled={isStarting}
              className="w-full"
            >
              {isStarting ? "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è..." : "–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥"}
            </Button>
          </div>

          <div>
            <h3 className="font-semibold mb-2">2. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —ç—Ç–∞–ø–∞</h3>
            <Button 
              onClick={handleTestStage} 
              disabled={isTestingStage}
              className="w-full"
            >
              {isTestingStage ? "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ..." : "–¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"}
            </Button>
          </div>

          <div>
            <h3 className="font-semibold mb-2">3. –ó–∞–≥—Ä—É–∑–∫–∞ –æ–ø—Ü–∏–π</h3>
            {optionsLoading && <p className="text-muted-foreground">–ó–∞–≥—Ä—É–∑–∫–∞ –æ–ø—Ü–∏–π...</p>}
            {error && <p className="text-destructive">–û—à–∏–±–∫–∞: {error}</p>}
            {options && (
              <div className="space-y-2">
                <p className="text-sm text-muted-foreground">
                  ‚úÖ –û–ø—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:
                </p>
                <ul className="text-xs space-y-1 text-muted-foreground">
                  <li>‚Ä¢ –¶–µ–ª–∏: {options.goals.length}</li>
                  <li>‚Ä¢ –í—ã–∑–æ–≤—ã: {options.challenges.length}</li>
                  <li>‚Ä¢ –°–æ—Å—Ç–æ—è–Ω–∏—è: {options.conditions.length}</li>
                  <li>‚Ä¢ –¢—Ä–∏–≥–≥–µ—Ä—ã —Ç—Ä–µ–≤–æ–≥–∏: {options.anxiety_triggers.length}</li>
                </ul>
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default OnboardingTest;