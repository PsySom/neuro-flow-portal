import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';

interface SocialSupportScreenProps {
  onNext: (data: any) => void;
  onBack: () => void;
}

const SocialSupportScreen: React.FC<SocialSupportScreenProps> = ({ onNext, onBack }) => {
  const [relationshipsQuality, setRelationshipsQuality] = useState('');
  const [lonelinessFrequency, setLonelinessFrequency] = useState('');
  const [supportSources, setSupportSources] = useState<string[]>([]);
  const [supportBarriers, setSupportBarriers] = useState<string[]>([]);
  const [lonelinessTriggers, setLonelinessTriggers] = useState<string[]>([]);

  const supportSourceOptions = [
    { id: 'family', title: '–°–µ–º—å—è (—Ä–æ–¥–∏—Ç–µ–ª–∏, –ø–∞—Ä—Ç–Ω–µ—Ä, –¥–µ—Ç–∏)', emoji: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶' },
    { id: 'friends', title: '–ë–ª–∏–∑–∫–∏–µ –¥—Ä—É–∑—å—è', emoji: 'üë•' },
    { id: 'colleagues', title: '–ö–æ–ª–ª–µ–≥–∏ –ø–æ —Ä–∞–±–æ—Ç–µ', emoji: 'üíº' },
    { id: 'therapist', title: '–ü—Å–∏—Ö–æ–ª–æ–≥ –∏–ª–∏ –ø—Å–∏—Ö–∏–∞—Ç—Ä', emoji: 'üß†' },
    { id: 'doctor', title: '–í—Ä–∞—á –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', emoji: 'üë®‚Äç‚öïÔ∏è' },
    { id: 'online', title: '–û–Ω–ª–∞–π–Ω-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ —Ñ–æ—Ä—É–º—ã', emoji: 'üåê' },
    { id: 'social-media', title: '–ó–Ω–∞–∫–æ–º—ã–µ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö', emoji: 'üì±' },
    { id: 'religious', title: '–†–µ–ª–∏–≥–∏–æ–∑–Ω–∞—è –æ–±—â–∏–Ω–∞ –∏–ª–∏ –¥—É—Ö–æ–≤–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫', emoji: 'üôè' },
    { id: 'content', title: '–ö–Ω–∏–≥–∏, –ø–æ–¥–∫–∞—Å—Ç—ã, –∫–æ–Ω—Ç–µ–Ω—Ç', emoji: 'üìö' },
    { id: 'none', title: '–ù–∏ –∫ –∫–æ–º—É - –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å–∞–º(–∞)', emoji: 'üòî' }
  ];

  const barrierOptions = [
    { id: 'independence', title: '–ü—Ä–∏–≤—ã–∫(–ª–∞) —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ', emoji: 'üí™' },
    { id: 'burden', title: '–°—Ç—Ä–∞—Ö –±—ã—Ç—å –æ–±—É–∑–æ–π –¥–ª—è –¥—Ä—É–≥–∏—Ö', emoji: 'üò∞' },
    { id: 'shame', title: '–°—Ç—ã–∂—É—Å—å —Å–≤–æ–∏—Ö –ø—Ä–æ–±–ª–µ–º', emoji: 'üò≥' },
    { id: 'cant-ask', title: '–ù–µ —É–º–µ—é –ø—Ä–æ—Å–∏—Ç—å –æ –ø–æ–º–æ—â–∏', emoji: 'ü§ê' },
    { id: 'trust', title: '–ù–µ –¥–æ–≤–µ—Ä—è—é –ª—é–¥—è–º —Å–≤–æ–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è', emoji: 'üë•' },
    { id: 'understanding', title: '–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–π–º–µ—Ç', emoji: 'üòî' },
    { id: 'judgment', title: '–ë–æ—é—Å—å –æ—Å—É–∂–¥–µ–Ω–∏—è –∏–ª–∏ –∫—Ä–∏—Ç–∏–∫–∏', emoji: '‚ö°' },
    { id: 'no-people', title: '–ü—Ä–æ—Å—Ç–æ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ª—é–¥–µ–π —Ä—è–¥–æ–º', emoji: 'üö´' },
    { id: 'online-easier', title: '–õ–µ–≥—á–µ –Ω–∞–π—Ç–∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ–Ω–ª–∞–π–Ω, —á–µ–º –≤–∂–∏–≤—É—é', emoji: 'üì±' }
  ];

  const triggerOptions = [
    { id: 'evening', title: '–í–µ—á–µ—Ä–æ–º –∏–ª–∏ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º', emoji: 'üåô' },
    { id: 'holidays', title: '–ù–∞ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞—Ö –∏ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö', emoji: 'üéâ' },
    { id: 'difficulties', title: '–ö–æ–≥–¥–∞ –ø–µ—Ä–µ–∂–∏–≤–∞—é —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏', emoji: 'üòî' },
    { id: 'crowds', title: '–í –±–æ–ª—å—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏—è—Ö –ª—é–¥–µ–π', emoji: 'üë•' },
    { id: 'work', title: '–ù–∞ —Ä–∞–±–æ—Ç–µ –∏–ª–∏ —É—á–µ–±–µ', emoji: 'üíº' },
    { id: 'social-media', title: '–í–∏–¥—è —á—É–∂—É—é "–∏–¥–µ–∞–ª—å–Ω—É—é" –∂–∏–∑–Ω—å –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö', emoji: 'üì±' },
    { id: 'home', title: '–î–æ–º–∞ –≤ —Ç–∏—à–∏–Ω–µ', emoji: 'üè†' },
    { id: 'decisions', title: '–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è', emoji: 'üéØ' },
    { id: 'success', title: '–ö–æ–≥–¥–∞ —Ö–æ—á–µ—Ç—Å—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —É—Å–ø–µ—Ö–∞–º–∏', emoji: 'üèÜ' }
  ];

  const toggleSelection = (item: string, setter: React.Dispatch<React.SetStateAction<string[]>>) => {
    setter(prev => {
      if (prev.includes(item)) {
        return prev.filter(id => id !== item);
      } else {
        return [...prev, item];
      }
    });
  };

  const handleSubmit = () => {
    onNext({
      relationshipsQuality,
      lonelinessFrequency,
      supportSources,
      supportBarriers,
      lonelinessTriggers
    });
  };

  return (
    <div className="p-8">
      <div className="mb-6">
        <Progress value={68.75} className="mb-4" />
        <p className="text-sm text-gray-500">11 –∏–∑ 16 —à–∞–≥–æ–≤</p>
      </div>
      
      <h2 className="text-2xl font-bold text-gray-900 mb-2">
        –°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —Å–≤—è–∑–∏
      </h2>
      <p className="text-gray-600 mb-6">
        –ü–æ–Ω–∏–º–∞–Ω–∏–µ –≤–∞—à–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–≤—è–∑–µ–π –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
      </p>
      
      <div className="space-y-8">
        <div>
          <Label className="text-sm font-medium text-gray-700 mb-4 block">
            –ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –±–ª–∏–∑–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π?
          </Label>
          <RadioGroup value={relationshipsQuality} onValueChange={setRelationshipsQuality}>
            <div className="flex items-center space-x-2">
              <RadioGroupItem value="strong" id="rel-strong" />
              <Label htmlFor="rel-strong">–£ –º–µ–Ω—è –µ—Å—Ç—å –∫—Ä–µ–ø–∫–∏–µ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è</Label>
            </div>
            <div className="flex items-center space-x-2">
              <RadioGroupItem value="good" id="rel-good" />
              <Label htmlFor="rel-good">–í —Ü–µ–ª–æ–º —Ö–æ—Ä–æ—à–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –Ω–æ –Ω–µ –≤—Å–µ–≥–¥–∞ —á—É–≤—Å—Ç–≤—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É</Label>
            </div>
            <div className="flex items-center space-x-2">
              <RadioGroupItem value="superficial" id="rel-superficial" />
              <Label htmlFor="rel-superficial">–û—Ç–Ω–æ—à–µ–Ω–∏—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–µ, –º–∞–ª–æ –∫–æ–º—É –º–æ–≥—É –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è</Label>
            </div>
            <div className="flex items-center space-x-2">
              <RadioGroupItem value="lonely" id="rel-lonely" />
              <Label htmlFor="rel-lonely">–ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –æ–¥–∏–Ω–æ–∫–æ –¥–∞–∂–µ —Å—Ä–µ–¥–∏ –ª—é–¥–µ–π</Label>
            </div>
          </RadioGroup>
        </div>

        <div>
          <Label className="text-sm font-medium text-gray-700 mb-4 block">
            –ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ?
          </Label>
          <RadioGroup value={lonelinessFrequency} onValueChange={setLonelinessFrequency}>
            <div className="flex items-center space-x-2">
              <RadioGroupItem value="never" id="lonely-never" />
              <Label htmlFor="lonely-never">–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∫–æ–≥–¥–∞ - —á—É–≤—Å—Ç–≤—É—é —Å–≤—è–∑—å —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏</Label>
            </div>
            <div className="flex items-center space-x-2">
              <RadioGroupItem value="sometimes" id="lonely-sometimes" />
              <Label htmlFor="lonely-sometimes">–ò–Ω–æ–≥–¥–∞, –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö</Label>
            </div>
            <div className="flex items-center space-x-2">
              <RadioGroupItem value="often" id="lonely-often" />
              <Label htmlFor="lonely-often">–ß–∞—Å—Ç–æ —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –æ–¥–∏–Ω–æ–∫–æ</Label>
            </div>
            <div className="flex items-center space-x-2">
              <RadioGroupItem value="constantly" id="lonely-constantly" />
              <Label htmlFor="lonely-constantly">–ü–æ—Å—Ç–æ—è–Ω–Ω–æ –æ—â—É—â–∞—é –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –∏ –∏–∑–æ–ª—è—Ü–∏—é</Label>
            </div>
          </RadioGroup>
        </div>

        <div>
          <Label className="text-sm font-medium text-gray-700 mb-4 block">
            –ö –∫–æ–º—É –≤—ã –æ–±—ã—á–Ω–æ –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π? (–Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
          </Label>
          <div className="grid grid-cols-1 gap-2">
            {supportSourceOptions.map((source) => (
              <div key={source.id} className="flex items-center space-x-2">
                <Checkbox
                  id={source.id}
                  checked={supportSources.includes(source.id)}
                  onCheckedChange={() => toggleSelection(source.id, setSupportSources)}
                />
                <Label htmlFor={source.id} className="flex items-center space-x-2">
                  <span>{source.emoji}</span>
                  <span>{source.title}</span>
                </Label>
              </div>
            ))}
          </div>
        </div>

        <div>
          <Label className="text-sm font-medium text-gray-700 mb-4 block">
            –ß—Ç–æ –º–µ—à–∞–µ—Ç –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π? (–Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
          </Label>
          <div className="grid grid-cols-1 gap-2">
            {barrierOptions.map((barrier) => (
              <div key={barrier.id} className="flex items-center space-x-2">
                <Checkbox
                  id={barrier.id}
                  checked={supportBarriers.includes(barrier.id)}
                  onCheckedChange={() => toggleSelection(barrier.id, setSupportBarriers)}
                />
                <Label htmlFor={barrier.id} className="flex items-center space-x-2">
                  <span>{barrier.emoji}</span>
                  <span>{barrier.title}</span>
                </Label>
              </div>
            ))}
          </div>
        </div>

        <div>
          <Label className="text-sm font-medium text-gray-700 mb-4 block">
            –í –∫–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è –Ω–∞–∏–±–æ–ª–µ–µ –æ–¥–∏–Ω–æ–∫–æ? (–Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
          </Label>
          <div className="grid grid-cols-1 gap-2">
            {triggerOptions.map((trigger) => (
              <div key={trigger.id} className="flex items-center space-x-2">
                <Checkbox
                  id={trigger.id}
                  checked={lonelinessTriggers.includes(trigger.id)}
                  onCheckedChange={() => toggleSelection(trigger.id, setLonelinessTriggers)}
                />
                <Label htmlFor={trigger.id} className="flex items-center space-x-2">
                  <span>{trigger.emoji}</span>
                  <span>{trigger.title}</span>
                </Label>
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="flex space-x-4 mt-8">
        <Button variant="outline" onClick={onBack} className="flex-1">
          –ù–∞–∑–∞–¥
        </Button>
        <Button 
          onClick={handleSubmit}
          className="flex-1 bg-gradient-to-r from-emerald-500 to-teal-500"
          disabled={!relationshipsQuality || !lonelinessFrequency}
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        </Button>
      </div>
    </div>
  );
};

export default SocialSupportScreen;