
import React from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Progress } from '@/components/ui/progress';
import { CheckCircle, User, Clock, Heart, Target, Calendar } from 'lucide-react';

interface FirstCheckinProps {
  userData: any;
  onNext: (data: any) => void;
  onBack: () => void;
}

const FirstCheckin: React.FC<FirstCheckinProps> = ({ userData, onNext, onBack }) => {
  const getMoodEmoji = (value: number) => {
    if (value <= -3) return 'üòî';
    if (value <= -1) return 'üòï';
    if (value <= 1) return 'üòê';
    if (value <= 3) return 'üôÇ';
    return 'üòÑ';
  };

  const getChronotypeEmoji = (chronotype: string) => {
    switch (chronotype) {
      case 'lark': return 'üåÖ';
      case 'owl': return 'üåô';
      case 'normal': return '‚òÄÔ∏è';
      case 'shift': return 'üîÑ';
      default: return '‚òÄÔ∏è';
    }
  };

  const getChronotypeLabel = (chronotype: string) => {
    switch (chronotype) {
      case 'lark': return '–ñ–∞–≤–æ—Ä–æ–Ω–æ–∫';
      case 'owl': return '–°–æ–≤–∞';
      case 'normal': return '–û–±—ã—á–Ω—ã–π —Ä–∏—Ç–º';
      case 'shift': return '–°–º–µ–Ω–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫';
      default: return '–û–±—ã—á–Ω—ã–π —Ä–∏—Ç–º';
    }
  };

  const formatTime = (hour: number) => {
    return `${hour.toString().padStart(2, '0')}:00`;
  };

  const getTopChallenges = () => {
    if (!userData.challenges || userData.challenges.length === 0) return '–ù–µ —É–∫–∞–∑–∞–Ω—ã';
    return userData.challenges.slice(0, 3).join(', ');
  };

  const getTopGoals = () => {
    if (!userData.goals || userData.goals.length === 0) return '–ù–µ —É–∫–∞–∑–∞–Ω—ã';
    const goalLabels = {
      'reduce-anxiety': '–°–Ω–∏–∑–∏—Ç—å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å',
      'improve-mood': '–£–ª—É—á—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
      'boost-self-esteem': '–ü–æ–≤—ã—Å–∏—Ç—å —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É',
      'manage-stress': '–°–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º',
      'better-sleep': '–£–ª—É—á—à–∏—Ç—å —Å–æ–Ω',
      'productivity': '–ü–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      'mindfulness': '–†–∞–∑–≤–∏—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å',
      'life-balance': '–ù–∞–π—Ç–∏ –±–∞–ª–∞–Ω—Å –≤ –∂–∏–∑–Ω–∏',
      'relationships': '–£–ª—É—á—à–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è',
      'self-care': '–ó–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ',
      'habits': '–†–∞–∑–≤–∏—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏',
      'thoughts': '–†–∞–±–æ—Ç–∞—Ç—å —Å –º—ã—Å–ª—è–º–∏'
    };
    return userData.goals.slice(0, 3).map((goal: string) => goalLabels[goal] || goal).join(', ');
  };

  const handleComplete = () => {
    onNext({
      checkinCompleted: true,
      checkinDate: new Date().toISOString()
    });
  };

  return (
    <div className="p-8">
      <div className="mb-6">
        <Progress value={100} className="mb-4" />
        <p className="text-sm text-gray-500">–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞</p>
      </div>
      
      <div className="text-center mb-6">
        <div className="w-16 h-16 bg-gradient-to-br from-emerald-400 to-teal-500 rounded-full flex items-center justify-center mx-auto mb-4">
          <CheckCircle className="w-8 h-8 text-white" />
        </div>
        <h2 className="text-2xl font-bold text-gray-900 mb-2">
          –î–∞–≤–∞–π—Ç–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        </h2>
        <p className="text-gray-600">
          –í–æ—Ç —Å–≤–æ–¥–∫–∞ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
        </p>
      </div>

      <div className="space-y-4 mb-8">
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="flex items-center text-lg">
              <User className="w-5 h-5 mr-2 text-emerald-600" />
              –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–ò–º—è:</span>
              <span className="font-medium">{userData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–í–æ–∑—Ä–∞—Å—Ç:</span>
              <span className="font-medium">{userData.age?.[0] || '–ù–µ —É–∫–∞–∑–∞–Ω'} –ª–µ—Ç</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–•—Ä–æ–Ω–æ—Ç–∏–ø:</span>
              <span className="font-medium">
                {getChronotypeEmoji(userData.chronotype)} {getChronotypeLabel(userData.chronotype)}
              </span>
            </div>
          </CardContent>
        </Card>

        {/* –†–µ–∂–∏–º –¥–Ω—è */}
        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="flex items-center text-lg">
              <Clock className="w-5 h-5 mr-2 text-blue-600" />
              –†–µ–∂–∏–º –¥–Ω—è
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ:</span>
              <span className="font-medium">{formatTime(userData.wakeTime || 7)}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–û—Ç—Ö–æ–¥ –∫–æ —Å–Ω—É:</span>
              <span className="font-medium">{formatTime(userData.sleepTime || 23)}</span>
            </div>
          </CardContent>
        </Card>

        {/* –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="flex items-center text-lg">
              <Heart className="w-5 h-5 mr-2 text-pink-600" />
              –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</span>
              <span className="font-medium">
                {getMoodEmoji(userData.mood || 0)} ({userData.mood > 0 ? '+' : ''}{userData.mood || 0})
              </span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–≠–Ω–µ—Ä–≥–∏—è:</span>
              <span className="font-medium">{userData.energy || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞:</span>
              <span className="font-medium">{userData.sleep || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞:</span>
              <span className="font-medium">{userData.stress || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
            </div>
          </CardContent>
        </Card>

        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã */}
        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="flex items-center text-lg">
              <Target className="w-5 h-5 mr-2 text-orange-600" />
              –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–∑–æ–≤—ã
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-sm text-gray-600">{getTopChallenges()}</p>
          </CardContent>
        </Card>

        {/* –¶–µ–ª–∏ */}
        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="flex items-center text-lg">
              <Calendar className="w-5 h-5 mr-2 text-purple-600" />
              –ì–ª–∞–≤–Ω—ã–µ —Ü–µ–ª–∏
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-sm text-gray-600">{getTopGoals()}</p>
          </CardContent>
        </Card>

        {/* –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è */}
        <Card>
          <CardHeader className="pb-3">
            <CardTitle className="flex items-center text-lg">
              <Clock className="w-5 h-5 mr-2 text-teal-600" />
              –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-2">
            <div className="flex justify-between">
              <span className="text-gray-600">–í—Ä–µ–º—è –¥–ª—è –∑–∞–±–æ—Ç—ã:</span>
              <span className="font-medium">{userData.timeCommitment || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:</span>
              <span className="font-medium">{userData.reminderFrequency || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å:</span>
              <span className="font-medium">{userData.structurePreference || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
            </div>
          </CardContent>
        </Card>
      </div>

      <div className="bg-emerald-50 border border-emerald-200 rounded-lg p-4 mb-6">
        <p className="text-sm text-emerald-800">
          <strong>–û—Ç–ª–∏—á–Ω–æ!</strong> –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –º—ã —Å–æ–∑–¥–∞–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω. 
          –¢–µ–ø–µ—Ä—å –≤—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–π –ø—É—Ç—å –∫ –ª—É—á—à–µ–º—É —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—é.
        </p>
      </div>

      <div className="flex space-x-4">
        <Button variant="outline" onClick={onBack} className="flex-1">
          –ù–∞–∑–∞–¥
        </Button>
        <Button 
          onClick={handleComplete}
          className="flex-1 bg-gradient-to-r from-emerald-500 to-teal-500"
        >
          –ó–∞–≤–µ—Ä—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        </Button>
      </div>
    </div>
  );
};

export default FirstCheckin;
