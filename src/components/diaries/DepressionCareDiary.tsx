
import React, { useState } from 'react';
import { Progress } from '@/components/ui/progress';
import { Button } from '@/components/ui/button';
import { ArrowLeft, Check } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import Step1DailyCare from './depression-care/Step1DailyCare';
import Step2EmotionalState from './depression-care/Step2EmotionalState';
import Step3ThoughtsWork from './depression-care/Step3ThoughtsWork';
import Step4BasicNeeds from './depression-care/Step4BasicNeeds';
import Step5OvercomingAvoidance from './depression-care/Step5OvercomingAvoidance';
import Step6RecoveryPlanning from './depression-care/Step6RecoveryPlanning';
import Step7CrisisSupport from './depression-care/Step7CrisisSupport';
import Step8LongTermObservation from './depression-care/Step8LongTermObservation';
import { DepressionCareDiaryData, getInitialDepressionCareData } from './depression-care/types';

const DepressionCareDiary: React.FC = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const [data, setData] = useState<DepressionCareDiaryData>(getInitialDepressionCareData());
  const { toast } = useToast();

  const totalSteps = 8;
  const progress = (currentStep / totalSteps) * 100;

  const handleDataChange = (field: string, value: any) => {
    setData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleNext = () => {
    if (currentStep < totalSteps) {
      setCurrentStep(prev => prev + 1);
    }
  };

  const handlePrev = () => {
    if (currentStep > 1) {
      setCurrentStep(prev => prev - 1);
    }
  };

  const handleComplete = () => {
    console.log('Depression Care Diary Data:', data);
    
    toast({
      title: "–î–Ω–µ–≤–Ω–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω",
      description: "–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ —Å –∑–∞–±–æ—Ç–ª–∏–≤—ã–º –≤—ã—Ö–æ–¥–æ–º –∏–∑ –¥–µ–ø—Ä–µ—Å—Å–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –ö–∞–∂–¥—ã–π —à–∞–≥ –≤–∞–∂–µ–Ω!",
    });
    
    setData(getInitialDepressionCareData());
    setCurrentStep(1);
  };

  const renderStep = () => {
    switch (currentStep) {
      case 1:
        return (
          <Step1DailyCare
            data={data}
            onDataChange={handleDataChange}
            onNext={handleNext}
          />
        );
      case 2:
        return (
          <Step2EmotionalState
            data={data}
            onDataChange={handleDataChange}
            onNext={handleNext}
            onPrev={handlePrev}
          />
        );
      case 3:
        return (
          <Step3ThoughtsWork
            data={data}
            onDataChange={handleDataChange}
            onNext={handleNext}
            onPrev={handlePrev}
          />
        );
      case 4:
        return (
          <Step4BasicNeeds
            data={data}
            onDataChange={handleDataChange}
            onNext={handleNext}
            onPrev={handlePrev}
          />
        );
      case 5:
        return (
          <Step5OvercomingAvoidance
            data={data}
            onDataChange={handleDataChange}
            onNext={handleNext}
            onPrev={handlePrev}
          />
        );
      case 6:
        return (
          <Step6RecoveryPlanning
            data={data}
            onDataChange={handleDataChange}
            onNext={handleNext}
            onPrev={handlePrev}
          />
        );
      case 7:
        return (
          <Step7CrisisSupport
            data={data}
            onDataChange={handleDataChange}
            onNext={handleNext}
            onPrev={handlePrev}
          />
        );
      case 8:
        return (
          <Step8LongTermObservation
            data={data}
            onDataChange={handleDataChange}
            onComplete={handleComplete}
            onPrev={handlePrev}
          />
        );
      default:
        return null;
    }
  };

  const stepTitles = [
    "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∑–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ",
    "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ",
    "–†–∞–±–æ—Ç–∞ —Å –º—ã—Å–ª—è–º–∏",
    "–ë–∞–∑–æ–≤—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏",
    "–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ –∏–∑–±–µ–≥–∞–Ω–∏—è",
    "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è",
    "–ö—Ä–∏–∑–∏—Å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
    "–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ"
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 to-purple-50 py-8">
      <div className="container mx-auto px-4">
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center mb-4">
            <Button 
              variant="ghost" 
              size="sm" 
              onClick={() => window.history.back()}
              className="mr-4"
            >
              <ArrowLeft className="w-4 h-4 mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
            <div className="flex-1">
              <h1 className="text-3xl font-bold text-gray-900 mb-2">
                –î–Ω–µ–≤–Ω–∏–∫ –∑–∞–±–æ—Ç–ª–∏–≤–æ–≥–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ –¥–µ–ø—Ä–µ—Å—Å–∏–∏
              </h1>
              <p className="text-gray-600 mb-2">
                {stepTitles[currentStep - 1]} ‚Ä¢ –®–∞–≥ {currentStep} –∏–∑ {totalSteps}
              </p>
              <p className="text-sm text-purple-600 italic">
                –≠—Ç–æ—Ç –¥–Ω–µ–≤–Ω–∏–∫ ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫ –Ω–∞ –ø—É—Ç–∏ –∫ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—é. 
                –ó–¥–µ—Å—å –Ω–µ—Ç –º–µ—Å—Ç–∞ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–µ, —Ç–æ–ª—å–∫–æ –ø–æ–Ω–∏–º–∞–Ω–∏–µ, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –∫ –ª—É—á—à–µ–º—É —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—é.
              </p>
            </div>
          </div>
          
          <Progress value={progress} className="h-3" />
        </div>

        {/* Step Content */}
        {renderStep()}

        {/* Footer */}
        <div className="mt-12 text-center">
          <div className="bg-purple-100 border border-purple-200 rounded-xl p-6 max-w-2xl mx-auto">
            <h3 className="text-lg font-semibold text-purple-900 mb-3">
              üíù –í–∞–∂–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
            </h3>
            <div className="text-sm text-purple-800 space-y-2">
              <p>‚Ä¢ –ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ —Ç–≤–æ—è –ø—Ä–∞–≤–¥–∞</p>
              <p>‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –ª–∏–Ω–µ–π–Ω—ã–π ‚Äî –ø–ª–æ—Ö–∏–µ –¥–Ω–∏ –Ω–µ –æ–∑–Ω–∞—á–∞—é—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</p>
              <p>‚Ä¢ –ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –≤–∞–∂–Ω–µ–µ –±–æ–ª—å—à–∏—Ö —Å–∫–∞—á–∫–æ–≤</p>
              <p>‚Ä¢ –°–∞–º–æ—Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ –≤–∞–∂–Ω–µ–µ —Å–∞–º–æ–∫—Ä–∏—Ç–∏–∫–∏</p>
              <p>‚Ä¢ –≠—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å, –∞ –Ω–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî –∏—Å—Ü–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–±—É–µ—Ç –≤—Ä–µ–º–µ–Ω–∏</p>
            </div>
          </div>
          
          <div className="mt-6 bg-pink-100 border border-pink-200 rounded-xl p-4 max-w-xl mx-auto">
            <p className="text-sm text-pink-800">
              üåà <strong>–î–µ–ø—Ä–µ—Å—Å–∏—è ‚Äî —ç—Ç–æ –Ω–µ –Ω–∞–≤—Å–µ–≥–¥–∞.</strong> –ö–∞–∂–¥—ã–π –¥–µ–Ω—å, –∫–æ–≥–¥–∞ —Ç—ã –∑–∞–ø–æ–ª–Ω—è–µ—à—å —ç—Ç–æ—Ç –¥–Ω–µ–≤–Ω–∏–∫, 
              —Ç—ã –¥–µ–ª–∞–µ—à—å —à–∞–≥ –∫ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏—é. –¢—ã –¥–æ—Å—Ç–æ–∏–Ω/–Ω–∞ –ª—é–±–≤–∏, –∑–∞–±–æ—Ç—ã –∏ —Å—á–∞—Å—Ç—å—è.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DepressionCareDiary;
