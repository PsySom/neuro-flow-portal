import React from 'react';
import { FormField, FormItem, FormLabel, FormControl, FormMessage } from '@/components/ui/form';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Slider } from '@/components/ui/slider';
import { UseFormReturn } from 'react-hook-form';
import { SleepDiaryData, dayRestTypes } from './types';
import { Sun, Coffee } from 'lucide-react';

interface Step4RestProps {
  form: UseFormReturn<SleepDiaryData>;
}

const Step4Rest: React.FC<Step4RestProps> = ({ form }) => {
  const morningFeeling = form.watch('morningFeeling');
  const hasDayRest = form.watch('hasDayRest');
  const dayRestEffectiveness = form.watch('dayRestEffectiveness');

  return (
    <div className="space-y-6">
      <div className="text-center mb-6">
        <Sun className="w-12 h-12 mx-auto text-yellow-500 mb-3" />
        <h2 className="text-2xl font-semibold text-gray-800 dark:text-gray-200 mb-2">
          –£—Ç—Ä–µ–Ω–Ω–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –æ—Ç–¥—ã—Ö
        </h2>
        <p className="text-gray-600 dark:text-gray-400">
          –ö–∞–∫ –≤—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ —Å–µ–±—è –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è –∏ –æ—Ç–¥—ã—Ö–∞–ª–∏ –ª–∏ –¥–Ω—ë–º?
        </p>
      </div>

      <FormField
        control={form.control}
        name="morningFeeling"
        render={({ field }) => (
          <FormItem>
            <FormLabel className="text-gray-700 dark:text-gray-300 text-lg mb-4 block">
              –ö–∞–∫ –≤—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ —Å–µ–±—è —É—Ç—Ä–æ–º –ø–æ—Å–ª–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è?
            </FormLabel>
            <FormControl>
              <div className="space-y-4">
                <Slider
                  min={1}
                  max={10}
                  step={1}
                  value={[field.value || 5]}
                  onValueChange={(value) => field.onChange(value[0])}
                  className="w-full"
                />
                <div className="text-center">
                  <div className="text-xl mb-2">
                    {field.value <= 3 && 'üò¥ –†–∞–∑–±–∏—Ç(–∞), —Ç—è–∂–µ–ª–æ –≤—Å—Ç–∞–≤–∞—Ç—å'}
                    {field.value > 3 && field.value <= 5 && 'üòê –°—Ä–µ–¥–Ω–µ'}
                    {field.value > 5 && field.value <= 7 && 'üòä –ù–µ–ø–ª–æ—Ö–æ'}
                    {field.value > 7 && field.value <= 9 && 'üòÉ –•–æ—Ä–æ—à–æ'}
                    {field.value > 9 && '‚ú® –õ–µ–≥–∫–æ, –≤ —Ä–µ—Å—É—Ä—Å–µ'}
                  </div>
                  <div className="text-sm text-gray-500 dark:text-gray-400">
                    –û—Ü–µ–Ω–∫–∞: {field.value}/10
                  </div>
                </div>
                {field.value <= 5 && (
                  <div className="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3">
                    <p className="text-blue-700 dark:text-blue-300 text-sm">
                      üíô –ü–æ–Ω–∏–∂–µ–Ω–Ω–∞—è —Ä–µ—Å—É—Ä—Å–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–∞ —Å –∫–∞—á–µ—Å—Ç–≤–æ–º —Å–Ω–∞. –í–∞–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.
                    </p>
                  </div>
                )}
              </div>
            </FormControl>
            <FormMessage />
          </FormItem>
        )}
      />

      <FormField
        control={form.control}
        name="hasDayRest"
        render={({ field }) => (
          <FormItem>
            <FormLabel className="text-gray-700 dark:text-gray-300 text-lg">
              –ë—ã–ª –ª–∏ —É –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è –¥–Ω–µ–≤–Ω–æ–π –æ—Ç–¥—ã—Ö, –ø–∞—É–∑–∞ –∏–ª–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–æ–Ω?
            </FormLabel>
            <FormControl>
              <RadioGroup
                value={field.value ? 'yes' : 'no'}
                onValueChange={(value) => field.onChange(value === 'yes')}
                className="flex space-x-6"
              >
                <div className="flex items-center space-x-2">
                  <RadioGroupItem value="yes" id="yes" />
                  <label htmlFor="yes" className="text-gray-700 dark:text-gray-300">–î–∞</label>
                </div>
                <div className="flex items-center space-x-2">
                  <RadioGroupItem value="no" id="no" />
                  <label htmlFor="no" className="text-gray-700 dark:text-gray-300">–ù–µ—Ç</label>
                </div>
              </RadioGroup>
            </FormControl>
            <FormMessage />
          </FormItem>
        )}
      />

      {hasDayRest && (
        <>
          <FormField
            control={form.control}
            name="dayRestType"
            render={({ field }) => (
              <FormItem>
                <FormLabel className="text-gray-700 dark:text-gray-300">
                  –ß—Ç–æ —ç—Ç–æ –±—ã–ª–æ?
                </FormLabel>
                <Select onValueChange={field.onChange} value={field.value}>
                  <FormControl>
                    <SelectTrigger className="bg-white/50 dark:bg-gray-800/50 border-gray-300 dark:border-gray-600">
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç–¥—ã—Ö–∞" />
                    </SelectTrigger>
                  </FormControl>
                  <SelectContent>
                    {dayRestTypes.map((type) => (
                      <SelectItem key={type} value={type}>
                        {type}
                      </SelectItem>
                    ))}
                  </SelectContent>
                </Select>
                <FormMessage />
              </FormItem>
            )}
          />

          <FormField
            control={form.control}
            name="dayRestEffectiveness"
            render={({ field }) => (
              <FormItem>
                <FormLabel className="text-gray-700 dark:text-gray-300 text-lg mb-4 block">
                  –ù–∞—Å–∫–æ–ª—å–∫–æ —ç—Ç–æ—Ç –æ—Ç–¥—ã—Ö –ø–æ–º–æ–≥ –≤–∞–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è?
                </FormLabel>
                <FormControl>
                  <div className="space-y-4">
                    <Slider
                      min={1}
                      max={10}
                      step={1}
                      value={[field.value || 5]}
                      onValueChange={(value) => field.onChange(value[0])}
                      className="w-full"
                    />
                    <div className="text-center">
                      <div className="text-xl mb-2">
                        <Coffee className="w-6 h-6 inline mr-2" />
                        –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {field.value}/10
                      </div>
                    </div>
                    {field.value < 5 && (
                      <div className="bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3">
                        <p className="text-orange-700 dark:text-orange-300 text-sm">
                          üí° –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–¥—Ö–æ–¥ –∫ –æ—Ç–¥—ã—Ö—É.
                        </p>
                      </div>
                    )}
                  </div>
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
        </>
      )}
    </div>
  );
};

export default Step4Rest;