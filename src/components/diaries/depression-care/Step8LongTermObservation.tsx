
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Slider } from '@/components/ui/slider';
import { ArrowLeft, Check, TrendingUp, Target, Heart } from 'lucide-react';
import { DepressionCareDiaryData } from './types';

interface Step8LongTermObservationProps {
  data: DepressionCareDiaryData;
  onDataChange: (field: string, value: any) => void;
  onComplete: () => void;
  onPrev: () => void;
}

const Step8LongTermObservation: React.FC<Step8LongTermObservationProps> = ({ 
  data, 
  onDataChange, 
  onComplete, 
  onPrev 
}) => {
  const handleWeeklyAverageChange = (field: string, value: number) => {
    onDataChange('weeklyAverages', {
      ...data.weeklyAverages,
      [field]: value
    });
  };

  const handleMonthlyProgressChange = (field: string, value: string) => {
    onDataChange('monthlyProgress', {
      ...data.monthlyProgress,
      [field]: value
    });
  };

  const handleFutureGoalChange = (field: string, value: string) => {
    onDataChange('futureGoals', {
      ...data.futureGoals,
      [field]: value
    });
  };

  const handleAchievementChange = (index: number, value: string) => {
    const currentAchievements = data.monthlyAchievements || [];
    const newAchievements = [...currentAchievements];
    newAchievements[index] = value;
    onDataChange('monthlyAchievements', newAchievements);
  };

  const addAchievement = () => {
    const currentAchievements = data.monthlyAchievements || [];
    onDataChange('monthlyAchievements', [...currentAchievements, '']);
  };

  const removeAchievement = (index: number) => {
    const currentAchievements = data.monthlyAchievements || [];
    onDataChange('monthlyAchievements', currentAchievements.filter((_, i) => i !== index));
  };

  return (
    <div className="space-y-8">
      <Card className="border-indigo-200 bg-indigo-50">
        <CardHeader>
          <CardTitle className="text-indigo-800 flex items-center">
            <TrendingUp className="w-5 h-5 mr-2" />
            üìä –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∏ —Ä–æ—Å—Ç
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <p className="text-sm text-indigo-700">
            –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑, –º–µ—Å—è—á–Ω—ã–π –æ–±–∑–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ.
          </p>

          {/* –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ */}
          <Card className="border-indigo-300 bg-white">
            <CardHeader>
              <CardTitle className="text-indigo-900 text-lg">
                üìà –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <h4 className="font-medium text-indigo-800 mb-4">–°—Ä–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –∑–∞ –Ω–µ–¥–µ–ª—é</h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <Label>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (-10 –¥–æ +10)</Label>
                    <div className="mt-2 space-y-2">
                      <Slider
                        value={[data.weeklyAverages?.mood || 0]}
                        onValueChange={(value) => handleWeeklyAverageChange('mood', value[0])}
                        min={-10}
                        max={10}
                        step={1}
                        className="w-full"
                      />
                      <div className="text-center text-sm text-gray-600">
                        –ó–Ω–∞—á–µ–Ω–∏–µ: {data.weeklyAverages?.mood || 0}
                      </div>
                    </div>
                  </div>

                  <div>
                    <Label>–≠–Ω–µ—Ä–≥–∏—è (1-10)</Label>
                    <div className="mt-2 space-y-2">
                      <Slider
                        value={[data.weeklyAverages?.energy || 5]}
                        onValueChange={(value) => handleWeeklyAverageChange('energy', value[0])}
                        min={1}
                        max={10}
                        step={1}
                        className="w-full"
                      />
                      <div className="text-center text-sm text-gray-600">
                        –ó–Ω–∞—á–µ–Ω–∏–µ: {data.weeklyAverages?.energy || 5}
                      </div>
                    </div>
                  </div>

                  <div>
                    <Label>–¢—Ä–µ–≤–æ–≥–∞ (1-10)</Label>
                    <div className="mt-2 space-y-2">
                      <Slider
                        value={[data.weeklyAverages?.anxiety || 5]}
                        onValueChange={(value) => handleWeeklyAverageChange('anxiety', value[0])}
                        min={1}
                        max={10}
                        step={1}
                        className="w-full"
                      />
                      <div className="text-center text-sm text-gray-600">
                        –ó–Ω–∞—á–µ–Ω–∏–µ: {data.weeklyAverages?.anxiety || 5}
                      </div>
                    </div>
                  </div>

                  <div>
                    <Label>–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω—å—é (1-10)</Label>
                    <div className="mt-2 space-y-2">
                      <Slider
                        value={[data.weeklyAverages?.satisfaction || 5]}
                        onValueChange={(value) => handleWeeklyAverageChange('satisfaction', value[0])}
                        min={1}
                        max={10}
                        step={1}
                        className="w-full"
                      />
                      <div className="text-center text-sm text-gray-600">
                        –ó–Ω–∞—á–µ–Ω–∏–µ: {data.weeklyAverages?.satisfaction || 5}
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <Label>–°–∞–º—ã–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏</Label>
                  <Textarea
                    value={data.effectiveActivities || ''}
                    onChange={(e) => onDataChange('effectiveActivities', e.target.value)}
                    placeholder="–ß—Ç–æ –ø–æ–º–æ–≥–∞–ª–æ –ª—É—á—à–µ –≤—Å–µ–≥–æ..."
                    className="mt-2"
                  />
                </div>

                <div>
                  <Label>–¢–µ—Ö–Ω–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ–≥–ª–∏</Label>
                  <Textarea
                    value={data.helpfulTechniques || ''}
                    onChange={(e) => onDataChange('helpfulTechniques', e.target.value)}
                    placeholder="–ü–æ–ª–µ–∑–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –º–µ—Ç–æ–¥—ã..."
                    className="mt-2"
                  />
                </div>

                <div>
                  <Label>–õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–¥–µ—Ä–∂–∞–ª–∏</Label>
                  <Textarea
                    value={data.supportivePeople || ''}
                    onChange={(e) => onDataChange('supportivePeople', e.target.value)}
                    placeholder="–ö—Ç–æ –æ–∫–∞–∑–∞–ª –ø–æ–¥–¥–µ—Ä–∂–∫—É..."
                    className="mt-2"
                  />
                </div>

                <div>
                  <Label>–û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –ø–ª–æ—Ö–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</Label>
                  <Textarea
                    value={data.majorTriggers || ''}
                    onChange={(e) => onDataChange('majorTriggers', e.target.value)}
                    placeholder="–ß—Ç–æ —É—Ö—É–¥—à–∞–ª–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ..."
                    className="mt-2"
                  />
                </div>
              </div>

              <div>
                <Label>–ü–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑–±–µ–≥–∞—é—â–µ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è</Label>
                <Textarea
                  value={data.avoidancePatterns || ''}
                  onChange={(e) => onDataChange('avoidancePatterns', e.target.value)}
                  placeholder="–ö–∞–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∏–∑–±–µ–≥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∏–ª–∏..."
                  className="mt-2"
                />
              </div>

              <div>
                <Label>–ß—Ç–æ —Ö–æ—á—É –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ</Label>
                <Textarea
                  value={data.nextWeekChanges || ''}
                  onChange={(e) => onDataChange('nextWeekChanges', e.target.value)}
                  placeholder="–ü–ª–∞–Ω—ã –∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è..."
                  className="mt-2"
                />
              </div>
            </CardContent>
          </Card>

          {/* –ú–µ—Å—è—á–Ω—ã–π –æ–±–∑–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
          <Card className="border-purple-200 bg-purple-50">
            <CardHeader>
              <CardTitle className="text-purple-900 text-lg">
                üìä –ú–µ—Å—è—á–Ω—ã–π –æ–±–∑–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <h4 className="font-medium text-purple-800 mb-4">–û–±—â–∞—è –¥–∏–Ω–∞–º–∏–∫–∞ –º–µ—Å—è—Ü–∞</h4>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <Label>–û–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ</Label>
                    <Input
                      value={data.monthlyProgress?.overallState || ''}
                      onChange={(e) => handleMonthlyProgressChange('overallState', e.target.value)}
                      placeholder="–õ—É—á—à–µ/—Ç–∞–∫ –∂–µ/—Ö—É–∂–µ..."
                      className="mt-2"
                    />
                  </div>

                  <div>
                    <Label>–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è</Label>
                    <Input
                      value={data.monthlyProgress?.copingAbility || ''}
                      onChange={(e) => handleMonthlyProgressChange('copingAbility', e.target.value)}
                      placeholder="–õ—É—á—à–µ/—Ç–∞–∫ –∂–µ/—Ö—É–∂–µ..."
                      className="mt-2"
                    />
                  </div>

                  <div>
                    <Label>–ö–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏</Label>
                    <Input
                      value={data.monthlyProgress?.lifeQuality || ''}
                      onChange={(e) => handleMonthlyProgressChange('lifeQuality', e.target.value)}
                      placeholder="–õ—É—á—à–µ/—Ç–∞–∫ –∂–µ/—Ö—É–∂–µ..."
                      className="mt-2"
                    />
                  </div>
                </div>
              </div>

              <div>
                <div className="flex items-center justify-between mb-2">
                  <Label className="text-base font-medium">–¢—Ä–∏ –≥–ª–∞–≤–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –º–µ—Å—è—Ü–∞</Label>
                  <Button 
                    type="button" 
                    variant="outline" 
                    size="sm"
                    onClick={addAchievement}
                  >
                    –î–æ–±–∞–≤–∏—Ç—å
                  </Button>
                </div>
                {(data.monthlyAchievements || []).map((achievement, index) => (
                  <div key={index} className="flex items-center space-x-2 mb-2">
                    <Input
                      value={achievement}
                      onChange={(e) => handleAchievementChange(index, e.target.value)}
                      placeholder={`–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ${index + 1}...`}
                      className="flex-1"
                    />
                    <Button
                      type="button"
                      variant="outline"
                      size="sm"
                      onClick={() => removeAchievement(index)}
                    >
                      –£–¥–∞–ª–∏—Ç—å
                    </Button>
                  </div>
                ))}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <Label>–ú–æ–∏ –ª–∏—á–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã –¥–µ–ø—Ä–µ—Å—Å–∏–∏</Label>
                  <Textarea
                    value={data.personalTriggers || ''}
                    onChange={(e) => onDataChange('personalTriggers', e.target.value)}
                    placeholder="–ß—Ç–æ —É–∑–Ω–∞–ª–∏ –æ —Å–≤–æ–∏—Ö —Ç—Ä–∏–≥–≥–µ—Ä–∞—Ö..."
                    className="mt-2"
                  />
                </div>

                <div>
                  <Label>–ß—Ç–æ –º–Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç</Label>
                  <Textarea
                    value={data.whatHelps || ''}
                    onChange={(e) => onDataChange('whatHelps', e.target.value)}
                    placeholder="–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏..."
                    className="mt-2"
                  />
                </div>

                <div>
                  <Label>–ú–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã</Label>
                  <Textarea
                    value={data.strengths || ''}
                    onChange={(e) => onDataChange('strengths', e.target.value)}
                    placeholder="–ß—Ç–æ –ø—Ä–æ—è–≤–∏–ª–æ—Å—å –∫–∞–∫ —Å–∏–ª–∞..."
                    className="mt-2"
                  />
                </div>

                <div>
                  <Label>–û–±–ª–∞—Å—Ç–∏, –≥–¥–µ –µ—â–µ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞</Label>
                  <Textarea
                    value={data.supportAreas || ''}
                    onChange={(e) => onDataChange('supportAreas', e.target.value)}
                    placeholder="–í —á–µ–º –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å..."
                    className="mt-2"
                  />
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –ü–ª–∞–Ω—ã –Ω–∞ –±—É–¥—É—â–µ–µ */}
          <Card className="border-green-200 bg-green-50">
            <CardHeader>
              <CardTitle className="text-green-900 text-lg flex items-center">
                <Target className="w-5 h-5 mr-2" />
                üå± –ü–ª–∞–Ω—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <h4 className="font-medium text-green-800 mb-4">–•–æ—á—É –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å</h4>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <Label>–ù–æ–≤—É—é —Ç–µ—Ö–Ω–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º</Label>
                    <Input
                      value={data.futureGoals?.newTechnique || ''}
                      onChange={(e) => handleFutureGoalChange('newTechnique', e.target.value)}
                      placeholder="–ö–∞–∫—É—é —Ç–µ—Ö–Ω–∏–∫—É..."
                      className="mt-2"
                    />
                  </div>

                  <div>
                    <Label>–ù–æ–≤—É—é –ø—Ä–∏—è—Ç–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</Label>
                    <Input
                      value={data.futureGoals?.newActivity || ''}
                      onChange={(e) => handleFutureGoalChange('newActivity', e.target.value)}
                      placeholder="–ö–∞–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å..."
                      className="mt-2"
                    />
                  </div>

                  <div>
                    <Label>–ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± –∑–∞–±–æ—Ç—ã –æ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏</Label>
                    <Input
                      value={data.futureGoals?.newCare || ''}
                      onChange={(e) => handleFutureGoalChange('newCare', e.target.value)}
                      placeholder="–ö–∞–∫–æ–π —Å–ø–æ—Å–æ–± –∑–∞–±–æ—Ç—ã..."
                      className="mt-2"
                    />
                  </div>
                </div>
              </div>

              <div>
                <h4 className="font-medium text-green-800 mb-4">–•–æ—á—É —É–∫—Ä–µ–ø–∏—Ç—å</h4>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <div>
                    <Label>–ü—Ä–∏–≤—ã—á–∫—É</Label>
                    <Input
                      value={data.futureGoals?.strengthenHabit || ''}
                      onChange={(e) => handleFutureGoalChange('strengthenHabit', e.target.value)}
                      placeholder="–ö–∞–∫—É—é –ø—Ä–∏–≤—ã—á–∫—É..."
                      className="mt-2"
                    />
                  </div>

                  <div>
                    <Label>–û—Ç–Ω–æ—à–µ–Ω–∏—è —Å</Label>
                    <Input
                      value={data.futureGoals?.strengthenRelation || ''}
                      onChange={(e) => handleFutureGoalChange('strengthenRelation', e.target.value)}
                      placeholder="–° –∫–µ–º..."
                      className="mt-2"
                    />
                  </div>

                  <div>
                    <Label>–ù–∞–≤—ã–∫</Label>
                    <Input
                      value={data.futureGoals?.strengthenSkill || ''}
                      onChange={(e) => handleFutureGoalChange('strengthenSkill', e.target.value)}
                      placeholder="–ö–∞–∫–æ–π –Ω–∞–≤—ã–∫..."
                      className="mt-2"
                    />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –ü–∏—Å—å–º–æ —Å–µ–±–µ –≤ –±—É–¥—É—â–µ–µ */}
          <Card className="border-pink-200 bg-pink-50">
            <CardHeader>
              <CardTitle className="text-pink-900 text-lg flex items-center">
                <Heart className="w-5 h-5 mr-2" />
                üíå –ü–∏—Å—å–º–æ —Å–µ–±–µ –≤ –±—É–¥—É—â–µ–µ
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-sm text-pink-700 mb-4">
                –ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü ‚Äî –º–∞–ª–µ–Ω—å–∫–æ–µ –ø–∏—Å—å–º–æ —Å–µ–±–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ—á–∏—Ç–∞–µ—à—å —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü.
              </p>
              
              <div>
                <Label>–ü–∏—Å—å–º–æ –¥–æ—Ä–æ–≥–æ–º—É/–æ–π —Å–µ–±–µ —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü</Label>
                <Textarea
                  value={data.letterToFuture || ''}
                  onChange={(e) => onDataChange('letterToFuture', e.target.value)}
                  placeholder="–î–æ—Ä–æ–≥–æ–π/–∞—è —è —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü! –°–µ–π—á–∞—Å —è —á—É–≤—Å—Ç–≤—É—é... –ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –º–µ–Ω—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç... –Ø –≥–æ—Ä–∂—É—Å—å —Å–æ–±–æ–π –∑–∞... –ú–æ–π —Å–æ–≤–µ—Ç —Ç–µ–±–µ... –Ø –≤–µ—Ä—é, —á—Ç–æ —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü... –° –ª—é–±–æ–≤—å—é –∏ –Ω–∞–¥–µ–∂–¥–æ–π, –Ø —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π/—è—è"
                  className="mt-2 min-h-[150px]"
                />
              </div>
            </CardContent>
          </Card>

          {/* –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ */}
          <div className="text-center py-8">
            <div className="bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md mx-auto border-2 border-green-200 dark:border-green-700">
              <h3 className="text-xl font-bold text-green-800 mb-4 flex items-center justify-center">
                <Check className="w-6 h-6 mr-2" />
                üåà –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!
              </h3>
              <p className="text-gray-700 mb-6">
                –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –¥–Ω–µ–≤–Ω–∏–∫ –∑–∞–±–æ—Ç–ª–∏–≤–æ–≥–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ –¥–µ–ø—Ä–µ—Å—Å–∏–∏. 
                –ö–∞–∂–¥—ã–π —à–∞–≥ ‚Äî —ç—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ –∫ –ª—É—á—à–µ–º—É —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—é. 
                –í—ã –¥–æ—Å—Ç–æ–π–Ω—ã –ª—é–±–≤–∏, –∑–∞–±–æ—Ç—ã –∏ —Å—á–∞—Å—Ç—å—è!
              </p>
              <Button 
                onClick={onComplete} 
                className="bg-green-600 hover:bg-green-700 text-white px-6 py-3"
                size="lg"
              >
                <Check className="w-5 h-5 mr-2" />
                –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–Ω–µ–≤–Ω–∏–∫
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>

      <div className="flex justify-between">
        <Button variant="outline" onClick={onPrev}>
          <ArrowLeft className="w-4 h-4 mr-2" />
          –ù–∞–∑–∞–¥
        </Button>
      </div>
    </div>
  );
};

export default Step8LongTermObservation;
