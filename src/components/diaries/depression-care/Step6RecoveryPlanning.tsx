
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { Textarea } from '@/components/ui/textarea';
import { ArrowLeft } from 'lucide-react';
import { DepressionCareDiaryData } from './types';

interface Step6RecoveryPlanningProps {
  data: DepressionCareDiaryData;
  onDataChange: (field: string, value: any) => void;
  onNext: () => void;
  onPrev: () => void;
}

const Step6RecoveryPlanning: React.FC<Step6RecoveryPlanningProps> = ({ 
  data, 
  onDataChange, 
  onNext, 
  onPrev 
}) => {
  const handleJoyChange = (category: string, joyType: 'quickJoys' | 'mediumJoys', items: string[]) => {
    onDataChange(joyType, {
      ...data[joyType],
      [category]: items
    });
  };

  const handleWeeklyPlanChange = (day: string, activity: string) => {
    onDataChange('weeklyPlan', {
      ...data.weeklyPlan,
      [day]: activity
    });
  };

  const handleBigJoyChange = (index: number, value: string) => {
    const currentJoys = data.bigJoys || [];
    const newJoys = [...currentJoys];
    newJoys[index] = value;
    onDataChange('bigJoys', newJoys);
  };

  const addBigJoy = () => {
    const currentJoys = data.bigJoys || [];
    onDataChange('bigJoys', [...currentJoys, '']);
  };

  const removeBigJoy = (index: number) => {
    const currentJoys = data.bigJoys || [];
    onDataChange('bigJoys', currentJoys.filter((_, i) => i !== index));
  };

  const JoyCategory = ({ 
    title, 
    category, 
    joyType, 
    suggestions 
  }: { 
    title: string; 
    category: string; 
    joyType: 'quickJoys' | 'mediumJoys'; 
    suggestions: string[] 
  }) => (
    <div>
      <Label className="text-base font-medium">{title}</Label>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-2 mt-2">
        {suggestions.map((suggestion) => (
          <div key={suggestion} className="flex items-center space-x-2">
            <Checkbox
              id={`${category}-${suggestion}`}
              checked={data[joyType]?.[category]?.includes(suggestion) || false}
              onCheckedChange={(checked) => {
                const currentItems = data[joyType]?.[category] || [];
                const newItems = checked 
                  ? [...currentItems, suggestion]
                  : currentItems.filter(item => item !== suggestion);
                handleJoyChange(category, joyType, newItems);
              }}
            />
            <Label htmlFor={`${category}-${suggestion}`} className="text-sm">{suggestion}</Label>
          </div>
        ))}
      </div>
    </div>
  );

  return (
    <div className="space-y-8">
      <Card className="border-teal-200 bg-teal-50">
        <CardHeader>
          <CardTitle className="text-teal-800">
            üå∏ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Ä–∞–¥–æ—Å—Ç–∏
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <p className="text-sm text-teal-700">
            –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—á–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Ç–æ–≥–æ, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–µ—Å—Ç–∏ —Ö–æ—Ç—å –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–¥–æ—Å—Ç–∏ –∏–ª–∏ –ø–æ–∫–æ—è.
          </p>

          {/* –ë–∞–Ω–∫ –ø—Ä–∏—è—Ç–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π */}
          <Card className="border-teal-300 bg-white">
            <CardHeader>
              <CardTitle className="text-teal-900 text-lg">
                üé® –ë–∞–Ω–∫ –ø—Ä–∏—è—Ç–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div>
                <h3 className="text-lg font-semibold text-teal-800 mb-4">–ë—ã—Å—Ç—Ä—ã–µ —Ä–∞–¥–æ—Å—Ç–∏ (5-15 –º–∏–Ω—É—Ç)</h3>
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <JoyCategory
                    title="–î–ª—è —Ç–µ–ª–∞"
                    category="body"
                    joyType="quickJoys"
                    suggestions={[
                      '–¢–µ–ø–ª—ã–π –¥—É—à/–≤–∞–Ω–Ω–∞',
                      '–†–∞—Å—Ç—è–∂–∫–∞',
                      '–ú–∞—Å—Å–∞–∂ —Ä—É–∫ –∏–ª–∏ –ª–∏—Ü–∞',
                      '–ê—Ä–æ–º–∞—Ç–Ω—ã–π —á–∞–π/–∫–æ—Ñ–µ',
                      '–£–¥–æ–±–Ω–∞—è –ø–æ–∑–∞ –ø–æ–¥ –ø–ª–µ–¥–æ–º'
                    ]}
                  />

                  <JoyCategory
                    title="–î–ª—è –¥—É—à–∏"
                    category="soul"
                    joyType="quickJoys"
                    suggestions={[
                      '–õ—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞',
                      '–°–º–µ—à–Ω–æ–µ –≤–∏–¥–µ–æ',
                      '–ö—Ä–∞—Å–∏–≤—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏',
                      '–ú–µ–¥–∏—Ç–∞—Ü–∏—è',
                      '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
                      '–ú–æ–ª–∏—Ç–≤–∞'
                    ]}
                  />

                  <JoyCategory
                    title="–î–ª—è —É–º–∞"
                    category="mind"
                    joyType="quickJoys"
                    suggestions={[
                      '–ß—Ç–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü',
                      '–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞',
                      '–û–±—É—á–∞—é—â–µ–µ –≤–∏–¥–µ–æ',
                      '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ–≥–æ-—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ',
                      '–ù–∞–ø–∏—Å–∞–Ω–∏–µ –º—ã—Å–ª–µ–π'
                    ]}
                  />

                  <JoyCategory
                    title="–î–ª—è —Å–≤—è–∑–∏"
                    category="connection"
                    joyType="quickJoys"
                    suggestions={[
                      '–°–æ–æ–±—â–µ–Ω–∏–µ –±–ª–∏–∑–∫–æ–º—É',
                      '–û–±–Ω–∏–º–∞–Ω–∏–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ',
                      '–ó–≤–æ–Ω–æ–∫ –¥—Ä—É–≥—É',
                      '–ó–∞–±–æ—Ç–∞ –æ —Ä–∞—Å—Ç–µ–Ω–∏–∏'
                    ]}
                  />
                </div>
              </div>

              <div>
                <h3 className="text-lg font-semibold text-teal-800 mb-4">–°—Ä–µ–¥–Ω–∏–µ —Ä–∞–¥–æ—Å—Ç–∏ (30-90 –º–∏–Ω—É—Ç)</h3>
                
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  <JoyCategory
                    title="–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ"
                    category="creativity"
                    joyType="mediumJoys"
                    suggestions={[
                      '–†–∏—Å–æ–≤–∞–Ω–∏–µ/—Ä–∞—Å–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ',
                      '–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤–∫—É—Å–Ω–æ–π –µ–¥—ã',
                      '–†—É–∫–æ–¥–µ–ª–∏–µ',
                      '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–Ω–∏–µ',
                      '–¢–∞–Ω—Ü—ã'
                    ]}
                  />

                  <JoyCategory
                    title="–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
                    category="entertainment"
                    joyType="mediumJoys"
                    suggestions={[
                      '–§–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª',
                      '–ò–≥—Ä–∞',
                      '–ö–Ω–∏–≥–∞',
                      '–ü–æ–¥–∫–∞—Å—Ç—ã',
                      '–ú—É–∑–µ–∏ –æ–Ω–ª–∞–π–Ω',
                      '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —ç–∫—Å–∫—É—Ä—Å–∏–∏'
                    ]}
                  />

                  <JoyCategory
                    title="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
                    category="activity"
                    joyType="mediumJoys"
                    suggestions={[
                      '–ü—Ä–æ–≥—É–ª–∫–∞ –≤ –ø—Ä–∏—è—Ç–Ω–æ–º –º–µ—Å—Ç–µ',
                      '–ô–æ–≥–∞',
                      '–ü–ª–∞–≤–∞–Ω–∏–µ',
                      '–í–µ–ª–æ—Å–∏–ø–µ–¥',
                      '–°–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ',
                      '–£–±–æ—Ä–∫–∞ –∫–∞–∫ –º–µ–¥–∏—Ç–∞—Ü–∏—è'
                    ]}
                  />
                </div>
              </div>

              <div>
                <div className="flex items-center justify-between mb-2">
                  <Label className="text-lg font-semibold text-teal-800">–ë–æ–ª—å—à–∏–µ —Ä–∞–¥–æ—Å—Ç–∏ (2+ —á–∞—Å–∞)</Label>
                  <Button 
                    type="button" 
                    variant="outline" 
                    size="sm"
                    onClick={addBigJoy}
                  >
                    –î–æ–±–∞–≤–∏—Ç—å
                  </Button>
                </div>
                {(data.bigJoys || []).map((joy, index) => (
                  <div key={index} className="flex items-center space-x-2 mb-2">
                    <Input
                      value={joy}
                      onChange={(e) => handleBigJoyChange(index, e.target.value)}
                      placeholder={`–ë–æ–ª—å—à–∞—è —Ä–∞–¥–æ—Å—Ç—å ${index + 1}...`}
                      className="flex-1"
                    />
                    <Button
                      type="button"
                      variant="outline"
                      size="sm"
                      onClick={() => removeBigJoy(index)}
                    >
                      –£–¥–∞–ª–∏—Ç—å
                    </Button>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –∑–∞–±–æ—Ç—ã */}
          <Card className="border-pink-200 bg-pink-50">
            <CardHeader>
              <CardTitle className="text-pink-800 text-lg">
                üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –∑–∞–±–æ—Ç—ã
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <Label className="text-base font-medium">–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ "–≤–∏—Ç–∞–º–∏–Ω—ã —Å—á–∞—Å—Ç—å—è"</Label>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                  {[
                    '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
                    '–í—Ç–æ—Ä–Ω–∏–∫', 
                    '–°—Ä–µ–¥–∞',
                    '–ß–µ—Ç–≤–µ—Ä–≥',
                    '–ü—è—Ç–Ω–∏—Ü–∞',
                    '–°—É–±–±–æ—Ç–∞',
                    '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
                  ].map((day) => (
                    <div key={day}>
                      <Label className="text-sm font-medium">{day}</Label>
                      <Input
                        value={data.weeklyPlan?.[day] || ''}
                        onChange={(e) => handleWeeklyPlanChange(day, e.target.value)}
                        placeholder="–û–¥–Ω–∞ –º–∞–ª–µ–Ω—å–∫–∞—è —Ä–∞–¥–æ—Å—Ç—å..."
                        className="mt-1"
                      />
                    </div>
                  ))}
                </div>
              </div>

              <div>
                <Label>–í—Ä–µ–º—è –¥–Ω—è, –∫–æ–≥–¥–∞ –æ—Å–æ–±–µ–Ω–Ω–æ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞</Label>
                <Input
                  value={data.recoveryTime || ''}
                  onChange={(e) => onDataChange('recoveryTime', e.target.value)}
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —É—Ç—Ä–æ, –æ–±–µ–¥, –≤–µ—á–µ—Ä..."
                  className="mt-2"
                />
              </div>

              <div>
                <Label>–î–ª—è —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–ª–∞–Ω–∏—Ä—É—é</Label>
                <Textarea
                  value={data.recoveryPlan || ''}
                  onChange={(e) => onDataChange('recoveryPlan', e.target.value)}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –ø–ª–∞–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –¥–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–Ω—è..."
                  className="mt-2"
                />
              </div>
            </CardContent>
          </Card>

          <div className="bg-teal-100 p-4 rounded-lg">
            <p className="text-sm text-teal-800">
              <strong>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:</strong> –†–∞–¥–æ—Å—Ç—å –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–æ–π. 
              –ò–Ω–æ–≥–¥–∞ –º–∞–ª–µ–Ω—å–∫–∏–π —Ç–µ–ø–ª—ã–π —á–∞–π –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç —Ç–∏—à–∏–Ω—ã –º–æ–≥—É—Ç —Å—Ç–∞—Ç—å 
              –Ω–∞—Å—Ç–æ—è—â–∏–º –ø–æ–¥–∞—Ä–∫–æ–º –¥–ª—è –¥—É—à–∏.
            </p>
          </div>
        </CardContent>
      </Card>

      <div className="flex justify-between">
        <Button variant="outline" onClick={onPrev}>
          <ArrowLeft className="w-4 h-4 mr-2" />
          –ù–∞–∑–∞–¥
        </Button>
        <Button onClick={onNext}>
          –î–∞–ª–µ–µ: –ö—Ä–∏–∑–∏—Å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
        </Button>
      </div>
    </div>
  );
};

export default Step6RecoveryPlanning;
