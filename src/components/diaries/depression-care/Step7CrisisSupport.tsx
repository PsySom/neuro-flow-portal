
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { Textarea } from '@/components/ui/textarea';
import { ArrowLeft, AlertTriangle, Phone } from 'lucide-react';
import { DepressionCareDiaryData } from './types';

interface Step7CrisisSupportProps {
  data: DepressionCareDiaryData;
  onDataChange: (field: string, value: any) => void;
  onNext: () => void;
  onPrev: () => void;
}

const Step7CrisisSupport: React.FC<Step7CrisisSupportProps> = ({ 
  data, 
  onDataChange, 
  onNext, 
  onPrev 
}) => {
  const handleCheckboxChange = (field: string, value: string, checked: boolean) => {
    const currentValues = data[field] || [];
    if (checked) {
      onDataChange(field, [...currentValues, value]);
    } else {
      onDataChange(field, currentValues.filter((item: string) => item !== value));
    }
  };

  const handleImmediateHelpChange = (timeframe: string, items: string[]) => {
    onDataChange('immediateHelp', {
      ...data.immediateHelp,
      [timeframe]: items
    });
  };

  const handleSupportNetworkChange = (person: string, field: string, value: string) => {
    onDataChange('supportNetwork', {
      ...data.supportNetwork,
      [person]: {
        ...data.supportNetwork?.[person],
        [field]: value
      }
    });
  };

  const ImmediateHelpSection = ({ 
    timeframe, 
    title, 
    suggestions 
  }: { 
    timeframe: string; 
    title: string; 
    suggestions: string[] 
  }) => (
    <div>
      <Label className="text-base font-medium">{title}</Label>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-2 mt-2">
        {suggestions.map((suggestion) => (
          <div key={suggestion} className="flex items-center space-x-2">
            <Checkbox
              id={`${timeframe}-${suggestion}`}
              checked={data.immediateHelp?.[timeframe]?.includes(suggestion) || false}
              onCheckedChange={(checked) => {
                const currentItems = data.immediateHelp?.[timeframe] || [];
                const newItems = checked 
                  ? [...currentItems, suggestion]
                  : currentItems.filter(item => item !== suggestion);
                handleImmediateHelpChange(timeframe, newItems);
              }}
            />
            <Label htmlFor={`${timeframe}-${suggestion}`} className="text-sm">{suggestion}</Label>
          </div>
        ))}
      </div>
    </div>
  );

  return (
    <div className="space-y-8">
      <Card className="border-red-200 bg-red-50">
        <CardHeader>
          <CardTitle className="text-red-800 flex items-center">
            <AlertTriangle className="w-5 h-5 mr-2" />
            üÜò –ö—Ä–∏–∑–∏—Å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <p className="text-sm text-red-700">
            –ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ç—Ä—É–¥–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏ —Ç–µ—Ö–Ω–∏–∫–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–∞–º–æ–ø–æ–º–æ—â–∏.
          </p>

          {/* –ü—Ä–∏–∑–Ω–∞–∫–∏ –∫—Ä–∏–∑–∏—Å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è */}
          <Card className="border-red-300 bg-white">
            <CardHeader>
              <CardTitle className="text-red-900 text-lg">
                üö® –ö–æ–≥–¥–∞ –≤—Å–µ –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <Label className="text-base font-medium">–ú–æ–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏ –∫—Ä–∏–∑–∏—Å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è</Label>
                <div className="grid grid-cols-1 gap-2 mt-2">
                  {[
                    '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ -7 –∏ –Ω–∏–∂–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π',
                    '–ú—ã—Å–ª–∏ –æ —Ç–æ–º, —á—Ç–æ "–ª—É—á—à–µ –±—ã –º–µ–Ω—è –Ω–µ –±—ã–ª–æ"',
                    '–ü–æ–ª–Ω–∞—è –ø–æ—Ç–µ—Ä—è –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫–æ –≤—Å–µ–º—É',
                    '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Å—Ç–∞—Ç—å —Å –∫—Ä–æ–≤–∞—Ç–∏',
                    '–ú—ã—Å–ª–∏ –æ —Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–∏',
                    '–ß—É–≤—Å—Ç–≤–æ –ø–æ–ª–Ω–æ–π –±–µ–∑–Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏'
                  ].map((signal) => (
                    <div key={signal} className="flex items-center space-x-2">
                      <Checkbox
                        id={signal}
                        checked={data.crisisSignals?.includes(signal) || false}
                        onCheckedChange={(checked) => 
                          handleCheckboxChange('crisisSignals', signal, checked as boolean)
                        }
                      />
                      <Label htmlFor={signal} className="text-sm">{signal}</Label>
                    </div>
                  ))}
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å —Å–µ–±–µ */}
          <Card className="border-orange-200 bg-orange-50">
            <CardHeader>
              <CardTitle className="text-orange-900 text-lg">
                ‚ö° –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å —Å–µ–±–µ
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-sm text-orange-700">
                –ö–æ–≥–¥–∞ –≤—Å–µ –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ, —è –¥–µ–ª–∞—é:
              </p>

              <ImmediateHelpSection
                timeframe="first5min"
                title="–í –ø–µ—Ä–≤—ã–µ 5 –º–∏–Ω—É—Ç"
                suggestions={[
                  '–ì–ª—É–±–æ–∫–æ –¥—ã—à—É (4 —Å—á–µ—Ç–∞ –≤–¥–æ—Ö, 6 —Å—á–µ—Ç–æ–≤ –≤—ã–¥–æ—Ö)',
                  '–ü—å—é —Ö–æ–ª–æ–¥–Ω—É—é –≤–æ–¥—É',
                  '–í—ã—Ö–æ–∂—É –Ω–∞ —Å–≤–µ–∂–∏–π –≤–æ–∑–¥—É—Ö –∏–ª–∏ –∫ –æ–∫–Ω—É',
                  '–í–∫–ª—é—á–∞—é —É—Å–ø–æ–∫–∞–∏–≤–∞—é—â—É—é –º—É–∑—ã–∫—É',
                  '–û–±–Ω–∏–º–∞—é –ø–æ–¥—É—à–∫—É –∏–ª–∏ –º—è–≥–∫—É—é –∏–≥—Ä—É—à–∫—É'
                ]}
              />

              <ImmediateHelpSection
                timeframe="first30min"
                title="–í –ø–µ—Ä–≤—ã–µ 30 –º–∏–Ω—É—Ç"
                suggestions={[
                  '–ó–≤–æ–Ω—é –±–ª–∏–∑–∫–æ–º—É —á–µ–ª–æ–≤–µ–∫—É',
                  '–ü—Ä–∏–Ω–∏–º–∞—é —Ç–µ–ø–ª—ã–π –¥—É—à',
                  '–ü—å—é –≥–æ—Ä—è—á–∏–π —á–∞–π',
                  '–°–º–æ—Ç—Ä—é —á—Ç–æ-—Ç–æ —É—Å–ø–æ–∫–∞–∏–≤–∞—é—â–µ–µ',
                  '–ü–∏—à—É –æ —Å–≤–æ–∏—Ö —á—É–≤—Å—Ç–≤–∞—Ö'
                ]}
              />

              <ImmediateHelpSection
                timeframe="first2hours"
                title="–í –ø–µ—Ä–≤—ã–µ 2 —á–∞—Å–∞"
                suggestions={[
                  '–ò–¥—É –∫ –ª—é–¥—è–º (–º–∞–≥–∞–∑–∏–Ω, –ø–∞—Ä–∫, –∫–∞—Ñ–µ)',
                  '–î–µ–ª–∞—é —Å–∞–º–æ–µ –±–∞–∑–æ–≤–æ–µ (–ø–æ–µ–º, –ø—Ä–∏–≤–µ–¥—É —Å–µ–±—è –≤ –ø–æ—Ä—è–¥–æ–∫)',
                  '–ó–≤–æ–Ω—é –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é –ø–æ–º–æ—â–∏',
                  '–û–±—Ä–∞—â–∞—é—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É'
                ]}
              />
            </CardContent>
          </Card>

          {/* –°–µ—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏ */}
          <Card className="border-blue-200 bg-blue-50">
            <CardHeader>
              <CardTitle className="text-blue-900 text-lg flex items-center">
                <Phone className="w-5 h-5 mr-2" />
                üìû –ú–æ—è —Å–µ—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-sm text-blue-700">
                –õ—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–º –º–æ–≥—É –Ω–∞–ø–∏—Å–∞—Ç—å/–ø–æ–∑–≤–æ–Ω–∏—Ç—å:
              </p>

              {/* –ë–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫ #1 */}
              <div className="bg-white p-4 rounded-lg border">
                <h4 className="font-medium text-blue-900 mb-3">–ë–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫ #1</h4>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                  <div>
                    <Label>–ò–º—è</Label>
                    <Input
                      value={data.supportNetwork?.person1?.name || ''}
                      onChange={(e) => handleSupportNetworkChange('person1', 'name', e.target.value)}
                      placeholder="–ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞..."
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                    <Input
                      value={data.supportNetwork?.person1?.phone || ''}
                      onChange={(e) => handleSupportNetworkChange('person1', 'phone', e.target.value)}
                      placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞..."
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label>–ö–æ–≥–¥–∞ –ª—É—á—à–µ –∑–≤–æ–Ω–∏—Ç—å</Label>
                    <Input
                      value={data.supportNetwork?.person1?.bestTime || ''}
                      onChange={(e) => handleSupportNetworkChange('person1', 'bestTime', e.target.value)}
                      placeholder="–í—Ä–µ–º—è..."
                      className="mt-1"
                    />
                  </div>
                </div>
              </div>

              {/* –ë–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫ #2 */}
              <div className="bg-white p-4 rounded-lg border">
                <h4 className="font-medium text-blue-900 mb-3">–ë–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫ #2</h4>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                  <div>
                    <Label>–ò–º—è</Label>
                    <Input
                      value={data.supportNetwork?.person2?.name || ''}
                      onChange={(e) => handleSupportNetworkChange('person2', 'name', e.target.value)}
                      placeholder="–ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞..."
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                    <Input
                      value={data.supportNetwork?.person2?.phone || ''}
                      onChange={(e) => handleSupportNetworkChange('person2', 'phone', e.target.value)}
                      placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞..."
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label>–ö–æ–≥–¥–∞ –ª—É—á—à–µ –∑–≤–æ–Ω–∏—Ç—å</Label>
                    <Input
                      value={data.supportNetwork?.person2?.bestTime || ''}
                      onChange={(e) => handleSupportNetworkChange('person2', 'bestTime', e.target.value)}
                      placeholder="–í—Ä–µ–º—è..."
                      className="mt-1"
                    />
                  </div>
                </div>
              </div>

              {/* –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç */}
              <div className="bg-white p-4 rounded-lg border">
                <h4 className="font-medium text-blue-900 mb-3">–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç (–ø—Å–∏—Ö–æ–ª–æ–≥/–≤—Ä–∞—á)</h4>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                  <div>
                    <Label>–ò–º—è</Label>
                    <Input
                      value={data.supportNetwork?.professional?.name || ''}
                      onChange={(e) => handleSupportNetworkChange('professional', 'name', e.target.value)}
                      placeholder="–ò–º—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞..."
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label>–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                    <Input
                      value={data.supportNetwork?.professional?.phone || ''}
                      onChange={(e) => handleSupportNetworkChange('professional', 'phone', e.target.value)}
                      placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞..."
                      className="mt-1"
                    />
                  </div>
                  <div>
                    <Label>–ó–∞–ø–∏—Å—å —á–µ—Ä–µ–∑</Label>
                    <Input
                      value={data.supportNetwork?.professional?.bookingInfo || ''}
                      onChange={(e) => handleSupportNetworkChange('professional', 'bookingInfo', e.target.value)}
                      placeholder="–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è..."
                      className="mt-1"
                    />
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –í–∞–∂–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è */}
          <div className="bg-red-100 border border-red-200 rounded-lg p-4">
            <h3 className="text-lg font-semibold text-red-900 mb-3">
              ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
            </h3>
            <div className="space-y-2 text-sm text-red-800">
              <p>‚Ä¢ <strong>–≠—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ</strong>, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –æ—â—É—â–∞–µ—Ç—Å—è —Ç–∞–∫–∏–º</p>
              <p>‚Ä¢ <strong>–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏:</strong> 8-800-2000-122</p>
              <p>‚Ä¢ <strong>–°–ª—É–∂–±–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏:</strong> 112</p>
              <p>‚Ä¢ <strong>–ü—Ä–∏ —Å—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã—Ö –º—ã—Å–ª—è—Ö:</strong> –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é</p>
              <p>‚Ä¢ <strong>–¢–µ—Ö–Ω–∏–∫–∞ "–æ—Ç–ª–æ–∂–∏ –Ω–∞ 24 —á–∞—Å–∞":</strong> –ø–æ–æ–±–µ—â–∞—Ç—å —Å–µ–±–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å —Å—É—Ç–∫–∏</p>
            </div>
          </div>
        </CardContent>
      </Card>

      <div className="flex justify-between">
        <Button variant="outline" onClick={onPrev}>
          <ArrowLeft className="w-4 h-4 mr-2" />
          –ù–∞–∑–∞–¥
        </Button>
        <Button onClick={onNext}>
          –î–∞–ª–µ–µ: –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
        </Button>
      </div>
    </div>
  );
};

export default Step7CrisisSupport;
