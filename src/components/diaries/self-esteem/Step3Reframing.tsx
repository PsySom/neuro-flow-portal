
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import { SelfEsteemDiaryData } from './types';

interface Step3Props {
  data: SelfEsteemDiaryData;
  onDataChange: (field: string, value: any) => void;
  onNext: () => void;
  onPrev: () => void;
}

const Step3Reframing: React.FC<Step3Props> = ({ data, onDataChange, onNext, onPrev }) => {
  return (
    <Card className="w-full max-w-4xl mx-auto">
      <CardHeader>
        <CardTitle className="text-xl font-semibold text-gray-900">
          –ü–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        <div>
          <Label className="text-base font-medium mb-3 block">
            10. –ö–∞–∫ –µ—â—ë –º–æ–∂–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç—å—Å—è –∫ —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?
          </Label>
          <p className="text-sm text-gray-600 mb-3">
            –ü—Ä–∏–º–µ—Ä—ã: ¬´–≠—Ç–æ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–µ–Ω—è —Ü–µ–ª–∏–∫–æ–º¬ª, ¬´–õ—é–±–æ–π –º–æ–∂–µ—Ç –æ—à–∏–±–∞—Ç—å—Å—è¬ª, ¬´–Ø —É—á—É—Å—å –Ω–∞ –æ–ø—ã—Ç–µ¬ª
          </p>
          <Textarea
            value={data.alternativePerspective}
            onChange={(e) => onDataChange('alternativePerspective', e.target.value)}
            placeholder="–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é..."
            className="min-h-[80px]"
          />
        </div>

        <div>
          <Label className="text-base font-medium mb-3 block">
            11. –ß—Ç–æ —Å–¥–µ–ª–∞–ª –±—ã –Ω–∞ —Ç–≤–æ—ë–º –º–µ—Å—Ç–µ –¥—Ä—É–≥–æ–π —á–µ–ª–æ–≤–µ–∫?
          </Label>
          <p className="text-sm text-gray-600 mb-3">
            –ü—Ä–∏–º–µ—Ä—ã: ¬´–ù–µ —Å—Ç–∞–ª –±—ã –≤–∏–Ω–∏—Ç—å —Å–µ–±—è¬ª, ¬´–ü–æ–ø—Ä–æ—Å–∏–ª –±—ã –ø–æ–º–æ—â–∏¬ª, ¬´–°–º–æ—Ç—Ä–µ–ª –±—ã –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é —à–∏—Ä–µ¬ª
          </p>
          <Textarea
            value={data.whatWouldOthersDo}
            onChange={(e) => onDataChange('whatWouldOthersDo', e.target.value)}
            placeholder="–ß—Ç–æ —Å–¥–µ–ª–∞–ª–∏ –±—ã –¥—Ä—É–≥–∏–µ..."
            className="min-h-[80px]"
          />
        </div>

        <div>
          <Label className="text-base font-medium mb-3 block">
            12. –ö–∞–∫ –±—ã —Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∞–ª –¥—Ä—É–≥–∞ –≤ –ø–æ–¥–æ–±–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏?
          </Label>
          <p className="text-sm text-gray-600 mb-3">
            –ü—Ä–∏–º–µ—Ä—ã: ¬´–ù–∞–ø–æ–º–Ω–∏–ª –±—ã –æ –µ–≥–æ —Å–∏–ª—å–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω–∞—Ö¬ª, ¬´–ü–æ—Ö–≤–∞–ª–∏–ª –±—ã –∑–∞ —Å—Ç–∞—Ä–∞–Ω–∏—è¬ª
          </p>
          <Textarea
            value={data.supportForFriend}
            onChange={(e) => onDataChange('supportForFriend', e.target.value)}
            placeholder="–ö–∞–∫ –ø–æ–¥–¥–µ—Ä–∂–∞–ª–∏ –±—ã –¥—Ä—É–≥–∞..."
            className="min-h-[80px]"
          />
        </div>

        <div>
          <Label className="text-base font-medium mb-3 block">
            13. –ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç —Ç–µ–±–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫—Ä–∏—Ç–∏–∫?
          </Label>
          <p className="text-sm text-gray-600 mb-3">
            –ü—Ä–∏–º–µ—Ä: ¬´–¢—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ç–∞—Ä–∞–µ—à—å—Å—è¬ª, ¬´–¢—ã —Å–ª–∞–±—ã–π¬ª
          </p>
          <Textarea
            value={data.innerCriticVoice}
            onChange={(e) => onDataChange('innerCriticVoice', e.target.value)}
            placeholder="–ì–æ–ª–æ—Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞..."
            className="min-h-[80px]"
          />
        </div>

        <div>
          <Label className="text-base font-medium mb-3 block">
            14. –ß—Ç–æ –±—ã —Å–∫–∞–∑–∞–ª —Ç–µ–±–µ –¥—Ä—É–≥/–∞–¥–≤–æ–∫–∞—Ç?
          </Label>
          <p className="text-sm text-gray-600 mb-3">
            –ü—Ä–∏–º–µ—Ä: ¬´–¢—ã –º–Ω–æ–≥–æ–µ —Å–¥–µ–ª–∞–ª, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –≤—Å—ë¬ª, ¬´–£ —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–∞–≤–æ –Ω–∞ –æ—à–∏–±–∫—É¬ª
          </p>
          <Textarea
            value={data.friendAdvocateVoice}
            onChange={(e) => onDataChange('friendAdvocateVoice', e.target.value)}
            placeholder="–ì–æ–ª–æ—Å –¥—Ä—É–≥–∞/–∞–¥–≤–æ–∫–∞—Ç–∞..."
            className="min-h-[80px]"
          />
        </div>

        <div>
          <Label className="text-base font-medium mb-3 block">
            15. –ö–∞–∫ –º–æ–∂–Ω–æ –æ—Ü–µ–Ω–∏—Ç—å —ç—Ç—É —Å–∏—Ç—É–∞—Ü–∏—é –∏–Ω–∞—á–µ?
          </Label>
          <p className="text-sm text-gray-600 mb-3">
            –í–∞—Ä–∏–∞–Ω—Ç—ã: –∫–∞–∫ –æ–ø—ã—Ç, –∫–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω—É—é –Ω–µ—É–¥–∞—á—É, –∫–∞–∫ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–∞–Ω–∏—è
          </p>
          <Textarea
            value={data.alternativeEvaluation}
            onChange={(e) => onDataChange('alternativeEvaluation', e.target.value)}
            placeholder="–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–∏—Ç—É–∞—Ü–∏–∏..."
            className="min-h-[80px]"
          />
        </div>

        <div className="bg-green-50 border border-green-200 rounded-lg p-4">
          <h4 className="font-semibold text-green-900 mb-2">üå± –ü–æ–º–Ω–∏—Ç–µ:</h4>
          <p className="text-green-800 text-sm">
            –ü–µ—Ä–µ–æ—Å–º—ã—Å–ª–µ–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º. –≠—Ç–æ –ø–æ–∏—Å–∫ –±–æ–ª–µ–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ 
            –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∑–≥–ª—è–¥–∞ –Ω–∞ —Å–µ–±—è –∏ —Å–≤–æ–π –æ–ø—ã—Ç.
          </p>
        </div>

        <div className="flex justify-between">
          <Button onClick={onPrev} variant="outline">
            –ù–∞–∑–∞–¥
          </Button>
          <Button onClick={onNext}>
            –î–∞–ª–µ–µ
          </Button>
        </div>
      </CardContent>
    </Card>
  );
};

export default Step3Reframing;
