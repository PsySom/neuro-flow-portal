import { useState, useEffect } from 'react';
import { onboardingService } from '@/services/onboarding.service';
import type { OnboardingOptions } from '@/types/onboarding.types';

export const useOnboardingOptions = () => {
  const [options, setOptions] = useState<OnboardingOptions | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const loadOptions = async () => {
      try {
        console.log('üîÑ Loading onboarding options from backend...');
        const data = await onboardingService.getAllOptions();
        setOptions(data);
        console.log('‚úÖ Onboarding options loaded successfully:', data);
      } catch (err: any) {
        console.error('‚ùå Failed to load onboarding options:', err);
        setError(err.message || 'Failed to load options');
        
        // Fallback to static options if backend fails
        setOptions({
          goals: [
            '–°–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —Ç—Ä–µ–≤–æ–≥–æ–π',
            '–£–ª—É—á—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
            '–ü–æ–≤—ã—Å–∏—Ç—å —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É',
            '–†–∞–∑–≤–∏—Ç—å —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –∫ —Å—Ç—Ä–µ—Å—Å—É',
            '–£–ª—É—á—à–∏—Ç—å —Å–æ–Ω',
            '–ü–æ–≤—ã—Å–∏—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é',
            '–†–∞–∑–≤–∏—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å'
          ],
          challenges: [
            '–¢—Ä–µ–≤–æ–≥–∞ –∏ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ',
            '–°—Ç—Ä–µ—Å—Å –∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ',
            '–ü—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—è –∏ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–Ω–∏–µ –¥–µ–ª',
            '–ù–∏–∑–∫–∞—è —Å–∞–º–æ–æ—Ü–µ–Ω–∫–∞',
            '–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º',
            '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏',
            '–¢—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–µ–π',
            '–ü–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è',
            '–û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ',
            '–í—ã–≥–æ—Ä–∞–Ω–∏–µ',
            '–ü—Ä–æ–±–ª–µ–º—ã –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö'
          ],
          conditions: [
            '–î–µ–ø—Ä–µ—Å—Å–∏—è',
            '–¢—Ä–µ–≤–æ–∂–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
            '–û–ö–†',
            '–ü–¢–°–†',
            '–ë–∏–ø–æ–ª—è—Ä–Ω–æ–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ',
            '–°–î–í–ì',
            '–†–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è'
          ],
          coping_strategies: [
            '–ì–ª—É–±–æ–∫–æ–µ –¥—ã—Ö–∞–Ω–∏–µ',
            '–ú–µ–¥–∏—Ç–∞—Ü–∏—è',
            '–§–∏–∑–∏—á–µ—Å–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
            '–ü—Ä–æ–≥—É–ª–∫–∏ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ',
            '–û–±—â–µ–Ω–∏–µ —Å –¥—Ä—É–∑—å—è–º–∏',
            '–°–ª—É—à–∞–Ω–∏–µ –º—É–∑—ã–∫–∏',
            '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ'
          ],
          procrastination_barriers: [
            '–°—Ç—Ä–∞—Ö –Ω–µ—É–¥–∞—á–∏',
            '–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º',
            '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –º–æ—Ç–∏–≤–∞—Ü–∏–∏',
            '–ü–µ—Ä–µ—É—Ç–æ–º–ª–µ–Ω–∏–µ',
            '–ù–µ—è—Å–Ω–æ—Å—Ç—å –∑–∞–¥–∞—á',
            '–û—Ç–≤–ª–µ–∫–∞—é—â–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã'
          ],
          anxiety_triggers: [
            '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏',
            '–†–∞–±–æ—Ç–∞/—É—á–µ–±–∞',
            '–ó–¥–æ—Ä–æ–≤—å–µ',
            '–ë—É–¥—É—â–µ–µ',
            '–§–∏–Ω–∞–Ω—Å—ã',
            '–û—Ç–Ω–æ—à–µ–Ω–∏—è',
            '–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å'
          ],
          anxiety_manifestations: [
            '–£—á–∞—â–µ–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ',
            '–ü–æ—Ç–ª–∏–≤–æ—Å—Ç—å',
            '–î—Ä–æ–∂—å',
            '–û–¥—ã—à–∫–∞',
            '–ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ',
            '–¢–æ—à–Ω–æ—Ç–∞',
            '–ú—ã—à–µ—á–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ'
          ],
          support_sources: [
            '–°–µ–º—å—è',
            '–î—Ä—É–∑—å—è',
            '–ö–æ–ª–ª–µ–≥–∏',
            '–ü—Å–∏—Ö–æ–ª–æ–≥/—Ç–µ—Ä–∞–ø–µ–≤—Ç',
            '–ì—Ä—É–ø–ø—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
            '–û–Ω–ª–∞–π–Ω-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞'
          ],
          support_barriers: [
            '–°—Ç—ã–¥/—Å—Ç–∏–≥–º–∞',
            '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è',
            '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —É—Å–ª—É–≥',
            '–ù–µ–¥–æ–≤–µ—Ä–∏–µ –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º',
            '–Ø–∑—ã–∫–æ–≤—ã–µ –±–∞—Ä—å–µ—Ä—ã',
            '–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —É–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç—å'
          ],
          loneliness_situations: [
            '–í –∫–æ–º–ø–∞–Ω–∏–∏ –ª—é–¥–µ–π',
            '–î–æ–º–∞ –≤ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–µ',
            '–ù–∞ —Ä–∞–±–æ—Ç–µ/—É—á–µ–±–µ',
            '–í —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö',
            '–ù–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö',
            '–ü–æ –≤—ã—Ö–æ–¥–Ω—ã–º'
          ]
        });
      } finally {
        setIsLoading(false);
      }
    };

    loadOptions();
  }, []);

  return { options, isLoading, error };
};